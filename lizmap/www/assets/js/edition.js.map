{"version":3,"file":"../../lizmap/www/assets/js/edition.js","mappings":"MA0rEA,SAASA,IACLC,KAAKC,QAAU,IA3rEF,WAEb,SAASC,EAAmBC,EAASC,EAASC,GAE1CL,KAAKM,QAAUH,EAEfH,KAAKO,OAAS,KAEdP,KAAKI,QAAUA,EAEfJ,KAAKK,SAAWA,EAEhBL,KAAKQ,OAAS,KAEdR,KAAKS,cAAe,EAEpBT,KAAKU,YAAc,GAevB,SAASC,IAELX,KAAKY,SAAU,EAEfZ,KAAKa,YAAc,KAEnBb,KAAKc,YAAc,SAEnBd,KAAKe,GAAK,KAEVf,KAAKgB,eAAiB,KAEtBhB,KAAKiB,QAAU,KAGfjB,KAAKkB,mBAAqB,GAE1BlB,KAAKmB,wBAA0B,GA9BnCjB,EAAmBkB,UAAY,CAC3BC,yBAA0B,SAAUb,GAChCR,KAAKS,eAAkBD,EACvBR,KAAKQ,OAASA,GAEdc,mBACA,OAAItB,KAAKO,OACEP,KAAKO,OAAOe,aAEhB,KAwBfX,EAAiBS,UAAY,CACrBb,aACA,OAAOP,KAAKgB,eAAeT,QAG3Be,mBACA,OAAItB,KAAKgB,gBAAkBhB,KAAKgB,eAAeT,OACpCP,KAAKgB,eAAeT,OAAOe,aAE/B,IAGPZ,kBACA,OAAOV,KAAKgB,eAAeN,aAG3Ba,SACA,OAAOvB,KAAKgB,eAAeV,SAG3BE,aACA,OAAOR,KAAKgB,eAAeR,QAG3BgB,eACA,OAAOxB,KAAKe,GAAGU,WAAWD,UAG9BE,kBAAoB,WACZ1B,KAAKa,aAAeb,KAAKa,YAAYc,QACrC3B,KAAKa,YAAYe,cAIzBC,YAAa,WACL7B,KAAKe,IACLf,KAAKe,GAAGe,kBAGR9B,KAAKiB,SACLjB,KAAKiB,QAAQa,mBAIrBC,MAAO,WACH/B,KAAKgB,eAAiB,KACtBhB,KAAKY,SAAU,EACfZ,KAAKa,YAAc,KACnBb,KAAKc,YAAc,SACnBd,KAAK6B,eAGTG,aAAe,WAEX,IAAIC,EAAOC,EAEc,GADRC,EAAIC,gBAAgB,kBACtBC,UACXJ,EAAQ,IAAIK,WAAWC,OACjBC,SAAS,CACX,IAAIF,WAAWG,KAAK,CAChBC,WAAY,CACR,MAAS,CACLC,YAAa,GAEjB,KAAQ,CACJC,YAAa,EACbC,UAAW,UACXC,YAAa,WAEjB,QAAW,CACPF,YAAa,QAMzB5C,KAAKmB,wBAAwBkB,QAC7BJ,EAAMO,SAASxC,KAAKmB,yBAGxBe,EAAW,IAAII,WAAWS,SAAS,CAAC,QAAWd,IAC/CjC,KAAKiB,QAAU,IAAIqB,WAAWU,MAAMC,OAAO,iBAAkB,CAACf,SAAUA,IACxEC,EAAIe,SAASlD,KAAKiB,UAKE,GADRkB,EAAIC,gBAAiB,aACvBC,UACVJ,EAAQ,IAAIK,WAAWC,OACjBC,SAAS,CACX,IAAIF,WAAWG,KAAK,CAACC,WAAa,CAC1B,MAAS,CACLC,YAAa,GAEjB,KAAQ,CACJC,YAAa,GAEjB,QAAW,CACPA,YAAa,QAKzB5C,KAAKkB,mBAAmBmB,QACxBJ,EAAMO,SAASxC,KAAKkB,oBAGxBgB,EAAW,IAAII,WAAWS,SAAS,CAAC,QAAWd,IAC/CjC,KAAKe,GAAK,IAAIuB,WAAWU,MAAMC,OAAO,YAAY,CAACf,SAASA,IAC5DC,EAAIe,SAASlD,KAAKe,MAI1BoC,WAAa,WACT,OAAInD,KAAKY,SAAWZ,KAAKe,IAAiC,GAA3Bf,KAAKe,GAAGqC,SAASf,OACrCrC,KAAKe,GAAGqC,SAAS,GAErB,MAGXC,oBAAsB,SAASC,GAC3BtD,KAAKe,GAAGwC,eAAgB,CAACD,KAQ7BE,8BAAgC,SAASF,EAAMG,GAC3CzD,KAAKe,GAAGwC,eAAgB,CAACD,IACzBtD,KAAKiB,QAAQyC,YAAY,CAACJ,IAC1BtD,KAAKgB,eAAeN,YAAYiD,KAAK,CAACL,EAAMG,KAGhDG,eAAgB,SAAS/C,GACrBb,KAAKa,YAAcA,EACnBb,KAAKY,SAAU,GAGnBiD,eAAgB,SAAUC,GACtB9D,KAAK6B,cACL7B,KAAKe,GAAG2C,YAAY,CAACI,KAGzBC,qBAAuB,WACnB,OAAsC,MAA9B/D,KAAKgB,eAAeR,QAAkBR,KAAKgB,eAAeP,cAGtEuD,qBAAuB,WACnB,IAAIC,EAAQjE,KAAKiB,QACjBgD,EAAMnC,kBACN,IAAIoC,EAAWlE,KAAKgB,eAAeN,YAAYyB,KAAI,SAASgC,GAAU,OAAOA,EAAQ,MACjFD,EAAS7B,QACT4B,EAAMP,YAAYQ,KAK9B,IAAI3D,EAAS,KAET4B,EAAM,KACNiC,EAAW,KAGXC,EAAY,KAGZC,EAAe,IAAI3D,EAGnB4D,EAAc,KAGdC,EAA0B,KAC9B,SAASC,IACL,IAAIC,EAAkBC,EAAE,2BACO,GAA1BD,EAAgBrC,QACjBqC,EAAgBE,SAEpBJ,EAA0B,KAE9B,SAASK,EAAkBC,EAAUC,EAAOC,GACnCR,IACDS,OAAOC,aAAaV,GACpBA,EAA0B,MAE9B,IAAIE,EAAkBC,EAAE,2BACO,GAA1BD,EAAgBrC,QACjBqC,EAAgBE,SAEpBO,OAAOC,WAAWN,EAAUC,EAAOC,GAAQK,KAAK,KAAK,0BACrDb,EAA0BS,OAAOK,WAAWb,EAAqB,KAGrE,SAASc,EAAqBC,GAC1B,IAAIC,EAAgBD,EAAIpC,SACpB9B,EAAegD,EAAahD,aAC5BoE,EAAgB,KACC,QAAhBpE,EAEGoE,EADCD,EAAc,GAAGE,SAASC,YAAcH,EAAc,GAAGE,SAASC,YACnDH,EAAc,GAEdA,EAAc,GAEZ,WAAhBnE,IAEFoE,EADCD,EAAc,GAAGE,SAASE,UAAYJ,EAAc,GAAGE,SAASE,UACjDJ,EAAc,GAEdA,EAAc,IAElCC,GACApB,EAAajB,oBAAoBqC,GAGrC,IAAIpC,EAAOgB,EAAanB,aAKxB,OAJIG,GACAwC,EAAgCxC,GAEpCqB,EAAE,8BAA8BoB,SACzB,EAIX,SAASC,EAAsBR,GAE3B,IAAIS,EAAOtB,EAAE,gCACb,MAAoC,OAAhCuB,EAAsBD,IAEtBpB,EAAkBsB,QAAQ,gCAAgC,SAAQ,IAC3D,KAENF,EAAKZ,KAAK,6BACXR,EAAkBsB,QAAQ,gCAAgC,SAAQ,IAC3D,GAMf,SAASC,EAAqBZ,GAG1B,IAAIC,EAAgBD,EAAIpC,SACpB9B,EAAegD,EAAahD,aAC5BwC,EAAa,KAejB,GAdqB,QAAhBxC,EAEGwC,EADC2B,EAAc,GAAGE,SAASC,YAAcH,EAAc,GAAGE,SAASC,YACtDH,EAAc,GAEdA,EAAc,GAET,WAAhBnE,IAEFwC,EADC2B,EAAc,GAAGE,SAASE,UAAYJ,EAAc,GAAGE,SAASE,UACpDJ,EAAc,GAEdA,EAAc,IAI/B3B,EAAY,CACZ,IAAImC,EAAOtB,EAAE,gCAET0B,EAAUJ,EAAKK,KAAK,oCAAoCC,MACxDC,EAAO,GAEPC,EAAO,IAAIC,SAAST,EAAKU,IAAI,IACjC,GAAI,QAASF,EACTA,EAAKG,IAAI,gBAAiB,IAC1BH,EAAKG,IAAI,mBAAoB,IACzBP,IACAG,EAAOK,EAAmC/C,GAC1C2C,EAAKG,IAAIP,EAASG,QAGrB,CAED,IAAIM,EAAiBb,EAAKK,KAAK,+BAC3BS,EAAYd,EAAKK,KAAK,eAAeD,EAAQ,MAC7CW,EAAaf,EAAKK,KAAK,kCACvBW,EAAeH,EAAeP,MAC9BW,EAAUH,EAAUR,MACpBY,EAAWH,EAAWT,MAC1BO,EAAeP,IAAI,IACnBS,EAAWT,IAAI,IACXF,IACAG,EAAOK,EAAmC/C,GAC1CiD,EAAUR,IAAIC,IAElBC,EAAO,IAAIC,SAAST,EAAKU,IAAI,IAC7BG,EAAeP,IAAIU,GACnBF,EAAUR,IAAIW,GACdF,EAAWT,IAAIY,GAGnB7C,EAAad,8BAA8BM,EAAY2C,GAI3D,IAAInD,EAAOgB,EAAanB,aAKxB,OAJIG,GACAwC,EAAiCxC,GAErCqB,EAAE,8BAA8BoB,SACzB,EA2CX,SAASqB,IACLzC,EAAE,kCAAkC0C,KAAKlB,QAAQ,kCAAkCI,IAAI,IAAIe,OAC3F3C,EAAE,gCAAgC0C,KAAKlB,QAAQ,gCAAgCI,IAAI,IAAIe,OACvF3C,EAAE,0BAA0B4B,IAAI,IAChC5B,EAAE,0BAA0B4B,IAAI,IAC3B5B,EAAE,oCAAoC4C,GAAG,aAC1C5C,EAAE,oCAAoCoB,QAC1CpB,EAAE,4BAA4B2C,OAC9B3C,EAAE,2BAA2B6C,QAAQ,kBAAkBC,SAAS,UAChE9C,EAAE,0BAA0B6C,QAAQ,kBAAkBC,SAAS,UAE/DtC,OAAOuC,OAAOC,aAAa,sCACvB,CACI,QAAWrD,EAAiB,GAC5B,cAAiBA,EAAqB,SAKlD,SAASsD,IACL,IAAIC,EAAQlD,EAAE,gCACVmD,EAAOD,EAAMvB,KAAK,0BAA0BC,MACnC,IAARuB,GAAgB,QAAQA,KAAQC,QAAQC,OACzCD,QAAQC,KAAK,QAAQF,GAAQD,EAAMvB,KAAK,2BAA2BC,OACvE5B,EAAE,kCAAkC0C,KAAKlB,QAAQ,iCAAiC,WAAW2B,GAAMvB,IAAIuB,GAAMG,OAE7G,IACIC,EADc5D,EAAa9C,SACL2G,QAAQ,QAAQ,IAC1CxD,EAAE,gCAAgC0C,KAAKlB,QAAQ,+BAA+B,WAAW+B,GAAS3B,IAAI2B,GAASD,OAE7E,SAA7B3D,EAAahD,aACdqD,EAAE,4BAA4B2C,OAE9B3C,EAAE,4BAA4BsD,OAElCtD,EAAE,uBAAuBsD,OAEzB9C,OAAOuC,OAAOC,aAAa,oCACvB,CACI,QAAWrD,EAAiB,GAC5B,cAAiBA,EAAqB,OACtC,YAAeA,EAA0B,cAKrD,SAAS8D,IACL,IAAIC,EAAIC,WAAW3D,EAAE,0BAA0B4B,OAC3CgC,EAAID,WAAW3D,EAAE,0BAA0B4B,OAC/C,IAAMiC,MAAMH,KAAOG,MAAMD,GAAK,CAC1B,IAAIE,EAAS,IAAInG,WAAWoG,SAASC,MAAMN,EAAEE,GAEzCT,EAAOnD,EAAE,4BAA4B4B,MACzCkC,EAAOG,UAAW,QAAQd,EAAMxD,EAAiB,GAAE7C,YACnD,IAAIH,EAAegD,EAAahD,aAChC,GAAM+C,EAAU/C,GAAcuH,QAAQC,MAOlCzE,EAAU/C,GAAcuH,QAAQC,MAAMnD,SAAS0C,EAAII,EAAOJ,EAC1DhE,EAAU/C,GAAcuH,QAAQC,MAAMnD,SAAS4C,EAAIE,EAAOF,EAC1DlE,EAAU/C,GAAcuH,QAAQC,MAAMnD,SAASoD,cAE/CC,EAA8B3E,EAAU/C,GAAcuH,QAAQ5E,MAAMb,SAAS,GAAGuC,cAXtC,CAC1C,IAAIsD,EAAK5E,EAAU/C,GAAcuH,QAAQ5E,MAAMiF,wBAAwB,CAACC,IAAIV,EAAOJ,EAAEe,IAAIX,EAAOF,IAChGlE,EAAU/C,GAAcuH,QAAQQ,cAAcJ,GAC9C5E,EAAU/C,GAAcuH,QAAQC,MAAMnD,SAAS0C,EAAII,EAAOJ,EAC1DhE,EAAU/C,GAAcuH,QAAQC,MAAMnD,SAAS4C,EAAIE,EAAOF,EAC1DlE,EAAU/C,GAAcuH,QAAQC,MAAMnD,SAASoD,cAQnD1E,EAAU/C,GAAcuH,QAAQS,eAKxC,SAASC,EAAcjJ,GACnB,IAAIkJ,EAAwB,CAAClJ,GAG7B,GAAI,cAAeC,EACf,IAAK,IAAIkJ,KAAMlJ,EAAOmJ,UAElB,GAAID,GAAMnJ,EAAU,CAChB,IAAIqJ,EAAiBpJ,EAAOmJ,UAAUpJ,GACtC,IAAK,IAAIsJ,KAAOD,EAAiB,CAC7B,IAAItJ,EAAWsJ,EAAeC,IACyC,GAAlEjF,EAAEkF,QAASxJ,EAASyJ,iBAAkBN,IAE3CA,EAAsB7F,KAAMtD,EAASyJ,wBAIxC,GAAU,SAANL,GAAiBnJ,KAAWC,EAAOmJ,UAAUK,MAAO,CACzD,IAAIC,EAAczJ,EAAOmJ,UAAUK,MAAMzJ,GACzC,IAAK,IAAI2J,KAAOD,GACqC,GAA5CrF,EAAEkF,QAASI,EAAKT,IAErBA,EAAsB7F,KAAMsG,OAI/B,CACD,IAAgD,GAA3CtF,EAAEkF,QAASJ,EAAID,GAChB,SAEJ,IAAK,IAAII,KADLD,EAAiBpJ,EAAOmJ,UAAUD,IAE9BpJ,EAAWsJ,EAAeC,IACjBE,kBAAoBxJ,GAC7BkJ,EAAsB7F,KAAM8F,GAQhD,IADA,IAAIS,EAAkB,GACfV,EAAsBnH,OAAS,GASlC,GARIuH,EAAMJ,EAAsBW,QAC5BC,EAAmBjF,OAAOkF,mBAC1BT,EACArJ,EAAO+J,OACP,MAIJ,CAGA,IACIF,EADAG,EAAWH,EAAiB,GAGhC,GAAM,iBAFFA,EAAmBA,EAAiB,KAEsC,QAAjCA,EAAiB9I,aAA9D,CAGA,IAAIkJ,EAAUrI,EAAIC,gBAAiBmI,GACb,GAAlBC,EAAQnI,SACRmI,EAAUrI,EAAIC,gBAAiB+C,OAAOsF,UAAWF,KAC/B,GAAlBC,EAAQnI,SAGZmI,EAAUA,EAAQ,IACLE,kBAGbR,EAAgBvG,KAAKyG,EAAiB7I,IACtCiJ,EAAQG,QAAO,KAEnB,OAAOT,EAgBX,SAASU,IAELzF,OAAO0F,gBAAiB,EACxBlG,EAAE,qBAAqBmG,YAAY,mBAG/BzG,IACAC,EAAa5C,oBACbiD,EAAE,wCAAwCmG,YAAY,QACtDnG,EAAE,+BAA+B2C,OACjCjD,EAAU0G,OAAOC,KAAO1I,WAAW2I,QAAQC,cAAcC,QACzD9G,EAAU0G,OAAOK,gBAAiB,EAClC/G,EAAUgH,MAAMzJ,cAIpB+C,EAAE,2BAA2BC,SAG7BD,EAAE,+BAA+B2C,OAAOD,KAAK,IAG7C1C,EAAE,2BAA2B2C,OAAOD,KAAK,IACzC1C,EAAE,mBAAmB2C,OAGjBgE,IACA3G,EAAE,qBAAqBsD,QAEvBtD,EAAE,6BAA6BsD,OAC/BtD,EAAE,eAAeoB,SAIrBpB,EAAE,iBAAiB2C,OAGnB3C,EAAE,4CAA4CsD,OAIlD,SAASqD,IACL,GAAI,kBAAmB/K,EACnB,IAAK,MAAMgL,KAAQhL,EAAOiL,cAEtB,GAA+C,SAD1BjL,EAAOiL,cAAcD,GAC1BE,aAAapC,cACzB,OAAO,EAInB,OAAO,EAwYX,SAASqC,EAAmBjD,GAExB,IAAIX,EAAOnD,EAAE,4BAA4B4B,MACrCoF,EAAc,IAAIrJ,WAAWsJ,WAAW,QAAU9D,GACtDW,EAAOG,UAAUtE,EAAiB,GAAE7C,WAAYkK,GAEjB,YAA3BA,EAAYE,YACZlH,EAAE,0BAA0B4B,IAAIkC,EAAOJ,EAAEyD,QAAQ,IACjDnH,EAAE,0BAA0B4B,IAAIkC,EAAOF,EAAEuD,QAAQ,MAEjDnH,EAAE,0BAA0B4B,IAAIkC,EAAOJ,EAAEyD,QAAQ,IACjDnH,EAAE,0BAA0B4B,IAAIkC,EAAOF,EAAEuD,QAAQ,KAIzD,SAASC,EAAsBC,EAAYvK,EAAYwK,GACnDtH,EAAE,2BAA2B6C,QAAQ,kBAAkBsD,YAAY,UAEnE,MAAMoB,EAAkBF,EAAW3J,OAC7B8J,EAAoB,IAAK7J,WAAWoG,SAAS0D,WAAW,CAACJ,EAAWE,EAAkB,GAAIF,EAAWE,EAAkB,KAAMG,kBAAkB5K,GAErJ,GAAIwK,EAAU,CACV,IAAIK,EAAoB,EAExB,GAAIJ,EAAkB,EAClB,IAAK,IAAIK,EAAQ,EAAGA,EAAQL,EAAkB,EAAGK,IAE7CD,GADW,IAAIhK,WAAWoG,SAAS0D,WAAW,CAACJ,EAAWO,GAAQP,EAAWO,EAAQ,KAC3DF,kBAAkB5K,QAGhD6K,EAAoBH,EAExBxH,EAAE,2BAA2B6H,KAAKL,EAAkBL,QAAQ,GAAK,MAAQQ,EAAkBR,QAAQ,SAEnGnH,EAAE,2BAA2B6H,KAAKL,EAAkBL,QAAQ,IAIhE3G,OAAOsH,WAAWC,QAAQP,kBAAoBA,EAAkBL,QAAQ,GAU5E,SAASa,EAA+BC,EAAGC,EAAGC,GAC1CnI,EAAE,0BAA0B6C,QAAQ,kBAAkBsD,YAAY,UAElE,MAAMiC,EAAKC,KAAKC,KAAKD,KAAKE,IAAIL,EAAExE,EAAIuE,EAAEvE,EAAG,GAAK2E,KAAKE,IAAIL,EAAEtE,EAAIqE,EAAErE,EAAG,IAC5D4E,EAAKH,KAAKC,KAAKD,KAAKE,IAAIL,EAAExE,EAAIyE,EAAEzE,EAAG,GAAK2E,KAAKE,IAAIL,EAAEtE,EAAIuE,EAAEvE,EAAG,IAC5D6E,EAAKJ,KAAKC,KAAKD,KAAKE,IAAIJ,EAAEzE,EAAIuE,EAAEvE,EAAG,GAAK2E,KAAKE,IAAIJ,EAAEvE,EAAIqE,EAAErE,EAAG,IAClE,IAAI8E,EAA6E,IAA3DL,KAAKM,MAAMH,EAAKA,EAAKJ,EAAKA,EAAKK,EAAKA,IAAO,EAAID,EAAKJ,IAAYC,KAAKO,GAEvF/E,MAAM6E,KACNA,EAAiB,GAGrB1I,EAAE,0BAA0B6H,KAAKa,EAAevB,QAAQ,IAI5D,SAAS9C,EAA8BwE,GACnC,GAA+B,mCAA3BA,EAAYC,YACTD,EAAYxB,YACZwB,EAAYxB,WAAW3J,OAAS,EAAG,CACtC,MAAM2J,EAAawB,EAAYxB,WACzB0B,EAAmB1B,EAAW3J,OAEpC0J,EACIC,EACA1H,EAAiB,GAAE7C,YACnB,GAGAiM,EAAmB,GACnBf,EAA+BX,EAAW0B,EAAmB,GAAI1B,EAAW0B,EAAmB,GAAI1B,EAAW0B,EAAmB,SAElI,GAA+B,gCAA3BF,EAAYC,YAChBD,EAAYxB,YACZwB,EAAYxB,WAAW,GAAGA,WAAW3J,OAAS,EAAG,CACpD,MAAMsL,EAAmBH,EAAYI,QAAQ5B,WAAW,GAAGA,WAC3D2B,EAAiBE,MACjB,MAAMC,EAAyBH,EAAiBtL,OAEhD0J,EACI4B,EACArJ,EAAiB,GAAE7C,YACnB,GAGAqM,EAAyB,GACzBnB,EAA+BgB,EAAiBG,EAAyB,GAAIH,EAAiBG,EAAyB,GAAIH,EAAiBG,EAAyB,KAsBjL,SAASC,EAAeC,EAAUC,EAAMC,EAASC,GAE7C,IAAIC,EAAgB,IAAIlO,EAAmB8N,EAAU,KAAM,MAGvDK,EAAa,KACjB,GAAe,MAAXH,GAAoB,YAAaA,GAAa,YAAaA,EAAU,CACrE,IAAII,EAAgBJ,EAAiB,QACjCK,EAAaL,EAAiB,QAClC,GAAI,cAAe3N,GACf+N,KAAiB/N,EAAOmJ,UAAW,CACnC,IAAIrJ,EAtkBhB,SAAyBiO,EAAcE,GACnC,GAAI,cAAejO,GAAU+N,KAAiB/N,EAAOmJ,UAAW,CAC5D,IAAIC,EAAiBpJ,EAAOmJ,UAAU4E,GACtC,IAAK,IAAIG,KAAS9E,EAAiB,CAC/B,IAAItJ,EAAWsJ,EAAe8E,GAC9B,GAAIpO,EAASyJ,kBAAoB0E,EAC7B,OAAOnO,GAInB,OAAO,KA4jBgBqO,CAAgBJ,EAAeN,GAC9C,GAAgB,MAAZ3N,GACAA,EAASyJ,kBAAoBkE,EAC/B,CAIE,GAAI7I,OAAO0F,gBAAkBvG,EAAiB,IAAKgK,EAAe,CAC9D,IAAIK,EAAgBhK,EAAE,4DAA4D4B,MAChE5B,EAAE,0DAA0D4B,OAC3D+H,GAAiBK,GAAiBJ,EAAWhN,GAAGqN,MAAM,KAAKf,SAG1EQ,EAAa/J,EAAatD,gBACfX,SAAWA,EACtBgO,EAAWjO,QAAUmO,EACrBH,EAAc/M,yBAAyBgN,GAEvCzD,KAIHyD,IAEDA,EAAa,IAAInO,EAAmBoO,EAAeC,EAAYlO,GAC/D+N,EAAc5N,OAAS6N,KAMvC,OAAOQ,EAAsBT,EAAeH,EAAME,GAGtD,SAASW,IACL,IAAIT,EAAa/J,EAAqB,OAGtC,OAAOuK,EAAsBR,EAFZA,EAAWjO,QAEwBmB,GAAGqN,MAAM,KAAKf,OAUtE,SAASgB,EAAsBT,EAAeH,EAAME,GAIhD,GAAIhJ,OAAO0F,eAAgB,CACvB,IAAMkE,QAAS5I,QAAQ,2BACnB,OAAO,EACXyE,IAOJ,GAHAtG,EAAavC,UAGN,kBAAmBxB,GAClB,OAAO,EAGf,IAAK8D,EACD,OAAO,EAEXc,OAAO0F,gBAAiB,EACxBlG,EAAE,qBAAqB8C,SAAS,mBAGhCnD,EAAatC,eAGb,IAAIgN,EAAW7J,OAAOkF,mBAAoB+D,EAAc9N,QAASC,EAAOiL,cAAe,WACvF,IAAKwD,EAGD,OAFA7J,OAAO0F,gBAAiB,EACxBlG,EAAE,qBAAqBmG,YAAY,oBAC5B,EAGXsD,EAAc7N,OAASyO,EAAS,GAEhC1K,EAAatD,eAAiBoN,EAG9B,IAAI9M,EAAe8M,EAAc9M,aAajC,OAZIA,KAAgB+C,GAChBC,EAAaV,eAAeS,EAAU/C,IAkB9C,SAAyB2N,EAAWd,GAEhCxJ,EAAE,mBAAmBsD,OACrBtD,EAAE,2BAA2B2C,OAG7B/C,EAAc0K,EAAY,gBAAkB,gBAG5C,IAAIC,EAAevK,EAAE,gCACO,GAAvBuK,EAAa7M,QACd6M,EAAaC,OAAO,UAIxB,IAAIC,EAAU9M,WAAW+M,KAAKC,UAAUC,QAAQ7C,QAC3CpK,WAAW+M,KAAKG,mBAAmBD,QAAQE,SAEhD9K,EAAEgC,IAAIyI,EAAQjH,QAAQ,aAAc5D,GAAa,CAC7CjE,QAASgE,EAAiB,GAC1B2K,UAAWA,IACZ,SAASxI,GAGR,QAAKpC,KAECC,EAAiB,KAIvBK,EAAE,6BAA6B2C,OAC/B3C,EAAE,qBAAqB2C,OAGvB3C,EAAE,iBAAiBsD,OAKnByH,EAAoBjJ,QAEhB0H,GACAA,EAAW7J,EAAiB,GAAG2K,QAxDvCU,CAAgB1B,EAAME,GAEtB7J,EAAaN,uBAGbW,EAAE,gBAAgBiL,QAAQ,eAEnB,EAgFX,SAASC,EAAsBC,GAC3B,IAAIC,EAAUpL,EAAG,UACZ8C,SAAU,uBACVuI,YAAaF,GACdG,EAAWH,EAAmBI,SAAU,aACxCC,EAAQF,EAAS1J,MAAQ0J,EAASzD,OAAS,GAC3C4D,EAAQzL,EAAG,WACV0L,SAAUN,GACVxJ,IAAK4J,GACL9K,KAAM,QAAS,IACfoC,SAAU,6BACV6I,aAAa,CACZC,OAAQ,SAAUC,EAASC,GACvB,IAAIC,EAAU,IAAIC,OAAQhM,EAAEiM,GAAGN,aAAaO,YAAYL,EAAQM,MAAO,KACvEL,EAAUX,EAAmBI,SAAU,UAAW/N,KAAI,WACpD,IAAIqK,EAAO7H,EAAG3E,MAAOwM,OACrB,GAAKxM,KAAKmQ,SAAYK,EAAQM,MAAQJ,EAAQK,KAAKvE,IACjD,MAAO,CACLwE,MAAOxE,EACP2D,MAAO3D,EACPyE,OAAQjR,aAKxBoQ,EAAME,aAAc,UAAWY,IAAI,UAAU,QAC7Cd,EAAM/K,KAAK,OAAQyK,EAAmBzK,KAAK,SAC3CyK,EAAmBzK,KAAK,OAAQ+K,EAAM/K,KAAK,QAAQ,WACnDyK,EAAmBxI,OAOvB,SAASoI,EAAoBjJ,GAEzB,IAAI0K,EAAoBxM,EAAE,gCAAgCyM,iBAGtDC,EAAgB1M,EAAE,2BACtB0M,EAAchK,KAAKZ,GAEnB,IAjEuB6K,EAiEnBrL,EAAOtB,EAAE,gCAGb,GAAoB,GAAfsB,EAAK5D,OAAc,CACI4D,EAAKmL,iBAA7B,IAGIzC,EAAgB1I,EAAKK,KAAK,+BAA+BC,MAI7D,GAHAhC,EAAcoK,EAAgB,gBAAkB,gBAG5CrK,EAAsB,SAAoB,iBAAfC,EAAgC,CAC3D,IAAI8B,EAAUJ,EAAKK,KAAK,oCAAoCC,MAC5D,GAAe,IAAXF,EAAe,CACf,IAAIkL,EAAetL,EAAKK,KAAK,eAAeD,EAAQ,MAAME,MAE1D5B,EAAE,8CAA8C4B,IAAKgL,IAK7D,GAA+B,MAA1BjN,EAAqB,OAAW,CACjC,IAAI+J,EAAa/J,EAAqB,OAClCjE,EAAWgO,EAAqB,SAChCmD,EAAmBnR,EAASoR,iBAC5BC,EAAiBrD,EAAoB,QAAEsD,WAAWtR,EAASuR,iBAE3DC,EAAS5L,EAAKK,KAAK,gBAAgBkL,EAAiB,MACxD,GAAqB,GAAjBK,EAAOxP,OAAa,CAEpBwP,EAAOtL,IAAImL,GACJrM,KAAK,WAAW,YAEvB,IAAIyM,EAAcnN,EAAE,iCACfU,KAAK,KAAMwM,EAAOxM,KAAK,MAAM,WAC7BA,KAAK,OAAQmM,GACbnM,KAAK,QAASqM,GACnBzL,EAAKK,KAAK,sBAAsByL,OAAOD,GAEvCE,SAASC,QAAQhM,EAAKZ,KAAK,OACtB6M,WAAWV,GACXW,UAAS,MACX,CACH,IAAI/B,EAAQnK,EAAKK,KAAK,eAAekL,EAAiB,MAClC,GAAhBpB,EAAM/N,QAAqC,UAAtB+N,EAAM/K,KAAK,SAEhC+K,EAAM7J,IAAImL,GACHrM,KAAK,WAAW,YAEnByM,EAAcnN,EAAE,iCACfU,KAAK,KAAM+K,EAAM/K,KAAK,MAAM,WAC5BA,KAAK,OAAQmM,GACbnM,KAAK,QAASqM,GACnBzL,EAAKK,KAAK,sBAAsByL,OAAOD,GAEvCE,SAASC,QAAQtN,EAAE,gCAAgCU,KAAK,OACnD6M,WAAWV,GACXW,UAAS,GAGd/B,EAAM7J,IAAImL,IAMtB,IADA,IAAIU,EAAmBnM,EAAKK,KAAK,kCACxB+L,EAAE,EAAGC,EAAIF,EAAiB/P,OAAQgQ,EAAEC,EAAKD,KAnI/Bf,EAoIM3M,EAAEyN,EAAiBC,KAnIjCE,SAAS,CACpB,UAAa,EACb,SAAY,CAAEC,GAAK,cAAeC,SAAU,QAC5C,SAAY,SAASjN,EAAKoL,GACxB,GAAKA,EAAG8B,KAAO,CACb,IAAIC,EAAOhO,EAAE3E,MACT4S,EAASjO,EAAEiM,EAAG8B,MAClBzN,OAAOK,YAAW,WAChBqN,EAAKpM,IAAIqM,EAAOrM,OAAOsM,WACtB,OAIXvB,EAAe9Q,SAAS8F,KAAK,gBACxBwE,YAAY,qEAwHb,IAAIgI,EAAsB7M,EAAKK,KAAK,sCACpC,IAAS+L,EAAE,EAAGC,EAAIQ,EAAoBzQ,OAAQgQ,EAAEC,EAAKD,IAEjDxC,EADyBlL,EAAEmO,EAAoBT,KAMnD,GAAkB,KADDpM,EAAKK,KAAK,4BAA4BC,MAC/B,CACpB,GAAiC,GAA5B4K,EAAkB9O,OAAa,CAChC,IAAI/B,EAAUgE,EAAiB,GAG3ByO,EAAK,8BACU,iBAAfxO,IACAwO,EAAK,gCAET5N,OAAOuC,OAAOC,aACVoL,EACA,CAAE,QAAWzS,IAIjBiJ,EAAcjJ,GAGlB,IAAIgB,EAAegD,EAAahD,aAChC,IAAIgC,EAAO0P,IAEX,GAAmB,iBAAfzO,GAAmCjB,EAuCwB,QAAtDgB,EAAqB,OAAEmH,aAAawH,gBACtC3R,KAAgB+C,GAEff,EA4apB,WAEI,IAAIA,EAAO0P,IAQX,OAPa,MAAR1P,IACDA,EAAO,IAAIhB,WAAW4Q,QAAQjQ,QAIlCK,EAAK6P,IAAMxO,EAAE,gCAAgC2B,KAAK,+BAA+BC,MACjFjC,EAAaT,eAAeP,GACrBA,EAtbgB8P,GACH9P,IACAe,EAAU0G,OAAOsI,WACjB1O,EAAE,8BAA8BoB,QAChC1B,EAAU0G,OAAOuI,cAAehQ,GACZ,QAAhBhC,GACAqD,EAAE,wCAAwC8C,SAAS,QACnC,SAAhBnG,GACAqD,EAAE,+BAA+BsD,SAGzCtD,EAAE,4CAA4C2C,OAGlDzC,EAAkBsB,QAAQ,kCAAkC,QAAO,QAtDnE,IAA0D,QAArD7B,EAAqB,OAAEmH,aAAapC,gBAClC/F,GAA8D,QAAtDgB,EAAqB,OAAEmH,aAAawH,iBAChD3R,KAAgB+C,EAAW,CAC1BM,EAAE,wCAAwCmG,YAAY,QACtDnG,EAAE,+BAA+B2C,OACjCjD,EAAU0G,OAAOC,KAAO1I,WAAW2I,QAAQC,cAAcC,QACzD9G,EAAU0G,OAAOK,gBAAiB,EAClC/G,EAAU0G,OAAOnJ,aACjB0C,EAAazC,cACb,IAAI0R,EAAOlP,EAAU/C,GACfiS,EAAK5R,SACP4R,EAAKF,WAEFlO,OAAOqO,cACN3O,EAAkBsB,QAAQ,gCAAiC,QAAQ,GAEnEtB,EAAkBsB,QAAQ,yBAAyB,QAAO,IAI9D7C,IACAgB,EAAiB,GAAEZ,YAAY,CAACJ,IAChCe,EAAU0G,OAAOsI,WACjB1O,EAAE,8BAA8BoB,QAChC1B,EAAU0G,OAAOuI,cAAehQ,GACZ,QAAhBhC,GACAqD,EAAE,wCAAwC8C,SAAS,QACnC,SAAhBnG,GACAqD,EAAE,+BAA+BsD,aAGzCtD,EAAE,4CAA4C2C,OA6B1D+J,EAAcpJ,OAMY,GAJRhC,EAAKiK,SAAS,eAAe5J,KAAK,MAAMmN,QACtD,WACI,MAAkC,SAA3B9O,EAAE3E,MAAMkR,IAAI,cAEX7O,OAEZsC,EAAE,IAAIsB,EAAKZ,KAAK,MAAM,gBAAgBiC,OAGtCrB,EAAKiK,SAAS,eAAe5J,KAAK,cAAcP,QAAQ2N,OA8JpE,SAAkCzN,GAE9B,IAAI0N,EAAQ3B,SAASC,QAAQhM,EAAKZ,KAAK,OAGvC,GAAKsO,EAAMC,kBAOX,IALA,IAAIC,EAAeF,EAAMC,kBAKjBvB,EAAE,EAAGC,EAAIuB,EAAaxR,OAAQgQ,EAAGC,EAAKD,IAAK,CAC/C,IAAIyB,EAAUD,EAAaxB,GAC3B0B,IAAM9N,EAAKK,KAAK,IAAIL,EAAKZ,KAAK,MAAM,IAAIyO,GACtB,GAAdC,IAAI1R,QACJ0R,IAAIlB,QAAO,WACPmB,EAAyB/N,OA5KjCgO,CAAyBhO,GAEzBtB,EAAE,IAAIsB,EAAKZ,KAAK,MAAM,4BAA4ByF,YAAY,iBAgLtE,SAAkC7E,GAE9B3B,EAA0B,YAAI,SAC9B2B,EAAKK,KAAK,wBAAwBP,OAAM,SAASP,GAC7C,IAAI0O,EAAYjO,EAAKZ,KAAK,MAAVY,YACZnF,EAAc6D,EAAE3E,MAAMqF,KAAK,MAAM8C,QAAQ+L,EAAW,IAIxD,GAHA5P,EAA0B,YAAIxD,EAGV,UAAfA,EAID,OAHA0E,EAAI2O,kBACCpF,QAAS5I,QAAQ,4BAClBuJ,EAAoB,KACjB,KAKf,IAAIpM,EAAOgB,EAAanB,aACpBG,GACAwC,EAAiCxC,GAIrC2C,EAAKmO,QAAO,SAAS5O,GAGjB,GAAkC,UAA/BlB,EAA0B,YAEzB,OAxnBRsG,IAGKtG,EAAaP,uBACd+K,KAEAxK,EAAavC,QAEboD,OAAOuC,OAAOC,aACV,6BA+mBO,EAIX,IAAI0M,EAAMnO,EAAsBD,EAAMT,GAGtC,IAAY,IAAR6O,EACA,OAAO,EAIX,GAAW,MAAPA,EAEA,OADAxP,EAAmBwP,EAAK,QAAQ,IACzB,EAIX,IAAIC,EAAmBrO,EAAKZ,KAAK,MAAVY,WACvBtB,EAAE,IAAM2P,GAAkB/N,IAAIjC,EAA0B,aAGxDK,EAAE,mBAAmBsD,OAErB,IAAIsM,EAAgBtO,EAAKZ,KAAK,2BAC1BmP,EAAMvO,EAAKZ,KAAK,UAChBoP,EAAc,IAAI/N,SAAST,EAAKU,IAAI,IACpC+N,EAAa,GAEbC,EAAkBC,EAAmBJ,EAAKC,GAU9C,OATAE,EAAgBE,MAAK,SAASpO,GAC1BiO,EAAajO,KAEjBnC,EAAa5D,YAAYoU,SAAQ,SAASC,GACtCJ,EAAkBA,EAAgBE,MAAK,IAAMD,EAAmBL,EAAeQ,EAAY,SAE/FJ,EAAgBE,MAAK,KACjBnF,EAAoBgF,OAEjB,KAjPPM,CAAyB/O,GAGzBd,OAAOuC,OAAOC,aAAa,6BACvB,CACI,QAAWrD,EAAiB,GAC5B,UAAaqK,EACb,cAAiBrK,EAAqB,SAQ9B,GAAf2B,EAAK5D,SACN+B,EAAkB,QAAExC,aACpBwC,EAAkB,QAAEiP,WAChB/S,EAAUgE,EAAiB,GAG3ByO,EAAK,8BACU,iBAAfxO,IACAwO,EAAK,gCACT5N,OAAOuC,OAAOC,aAAaoL,EACvB,CAAE,QAAWzS,IAIjBiJ,EAAcjJ,GAEdsK,IAGa,IAARnE,GACD5B,EAAmB4B,EAAM,QAAQ,IAIzC9B,EAAE,mBAAmB2C,OAGrB3C,EAAE,2CAA2CoB,QAGzCpB,EAAE,0BAA0BtC,QAC5BsC,EAAE,0BAA0BoB,QAC5BpB,EAAE,4CAA4CtC,QAC1CsC,EAAE,wCAAwCsQ,SAAS,YACnDtQ,EAAE,wBAAwBoB,QAC1BpB,EAAE,0BAA0BC,UAIjB,GAAfqB,EAAK5D,SACDiC,EAAaP,uBAEb+K,KAEAxK,EAAavC,QACboD,OAAO+P,eAAe,eAEtB/P,OAAOuC,OAAOC,aACV,6BAMhB,SAASqM,EAA0B/N,GAC/B,MAAM0N,EAAQ3B,SAASC,QAAQhM,EAAKZ,KAAK,OAGnC8P,EAAkB,IAAIzO,SAASiN,EAAMyB,SACrCC,EAAe,IAAI3O,SAGzB2O,EAAatD,OAAO,SAAU4B,EAAM2B,UACpCD,EAAatD,OAAO,WAAY4B,EAAM4B,QACtCF,EAAatD,OAAO,mBAAoBoD,EAAgBxO,IAAI,qBAG5D,IAAK,MAAMmN,KAAWH,EAAMC,kBACxB,IAAK,MAAMzD,KAASgF,EAAgBK,OAAO1B,GACvCuB,EAAatD,OAAO+B,EAAS3D,GAIrCsF,MAAMzD,SAAS0D,qBAAqB,CAChCC,OAAQ,OACRC,KAAMP,IACPR,MAAK,SAAUpE,GACd,OAAOA,EAASoF,UACjBhB,MAAK,SAAUpO,GACd,IAAKqP,WAAWrP,EAAM,CAClB,IAAIsP,EAAQpR,EAAE,IAAMmR,SACpB,GAAIC,EAAMd,SAAS,YAAa,CAG5B,IAAIe,EAAM/P,EAAKiK,SAAS,eAAe5J,KAAK,eAAiBwP,QAAU,MACnEG,EAAYD,EAAIxV,SACpB,GAAIiG,EAAKqP,SAAU,CAEVG,EAAU1O,GAAG,aACd0O,EAAUhO,OAEd,IAAIiO,EAAavR,EAAE,IAAMsB,EAAKZ,KAAK,MAAQ,gBACvC6Q,EAAW3O,GAAG,aAGd2O,EAAWjO,OACX+N,EAAIjQ,QAAQ2N,aAIXuC,EAAUhB,SAAS,UAKhBgB,EAAUE,KAAK,YAAY9T,OAAS,GAGpC4T,EAAUE,OAAOjG,SAAS,KAAKkG,QAAQrQ,QAAQ2N,OAC/CuC,EAAU3O,QACH2O,EAAUI,KAAK,YAAYhU,OAAS,GAG3C4T,EAAUI,OAAOnG,SAAS,KAAKkG,QAAQrQ,QAAQ2N,OAC/CuC,EAAU3O,SAIV2O,EAAU3O,OACV3C,EAAE,IAAMsB,EAAKZ,KAAK,MAAQ,gBAAgBiC,QAhB9C2O,EAAU3O,YAsBdb,EAAKqP,SACLC,EAAM9N,OAEN8N,EAAMzO,WA4G1B,SAASsN,EAAmBJ,EAAK/Q,GAC7B,OAAO,IAAI6S,SAAQ,SAASC,EAASC,GAEjC,IAAIhG,EAAU,IAAIiG,eAClBjG,EAAQkG,KAAK,OAAQlC,GACrBhE,EAAQmG,OAAS,SAASC,GACA,KAAlBpG,EAAQqG,OACRN,EAAQ/F,EAAQsG,cAEhBN,KAGRhG,EAAQuG,KAAKtT,MAUrB,SAASyC,EAAsBD,EAAMT,GAGjC,GAAIA,GACA,IAAKwM,SAASgF,gBAAgBxR,GAC1B,OAAO,OAKX,GADAS,EAAK2J,QAAQ,uBACRoC,SAASiF,WAAWhR,EAAKU,IAAI,IAC9B,OAAO,EAIf,IAAI0N,EAAM,KACV,GACI/P,EAAsB,SACnB,uBAAwBA,EAAqB,OAAEmH,cACW,SAA1DnH,EAAqB,OAAEmH,aAAayL,mBAA8B,CAErE,IAAI7Q,EAAUJ,EAAKK,KAAK,oCAAoCC,MAErC,IADRN,EAAKK,KAAK,eAAeD,EAAQ,MAAME,MACzC4Q,SACT9C,EAAMlO,QAAQ,sCAItB,OAAOkO,EAGX,SAASxN,EAAmCvD,GACxC,GAAqB,MAAjBA,EAAKqC,SACL,MAAO,GAGX,IAAKrB,EAAiB,GAClB,MAAO,GAIX,IAAIkC,EAAOlD,EAAKqC,SAASiI,QAGrB/F,EAAQlD,EAAE,gCACVmD,EAAOD,EAAMvB,KAAK,0BAA0BC,MAKhD,MAJY,IAARuB,GAAgB,QAAQA,KAAQC,QAAQC,OACxCD,QAAQC,KAAK,QAAQF,GAAQD,EAAMvB,KAAK,2BAA2BC,OAEvEC,EAAKoC,UAAUtE,EAAiB,GAAE7C,WAAY,QAAQqG,GAC/CtB,EAIX,SAASV,EAAiCxC,GAEtC,IAAIkD,EAAOK,EAAmCvD,GAC9C,GAAa,KAATkD,EACA,OAAO,EAGX,IAAIqB,EAAQlD,EAAE,gCACVmD,EAAOD,EAAMvB,KAAK,0BAA0BC,MACpC,IAARuB,GAAgB,QAAQA,KAAQC,QAAQC,OACxCD,QAAQC,KAAK,QAAQF,GAAQD,EAAMvB,KAAK,2BAA2BC,OAKvE,IAAIF,EAAUwB,EAAMvB,KAAK,oCAAoCC,MAG7DsB,EAAMvB,KAAK,eAAeD,EAAQ,MAAME,IAAIC,GAAMqM,SAElD,IAAIlE,EAAgB9G,EAAMvB,KAAK,+BAA+BC,MAC1D6Q,EAAcvP,EAAMvB,KAAK,6BAA6BC,MAS1D,OARApB,OAAOuC,OAAOC,aAAa,+BACvB,CACI,QAAWyP,EACX,UAAazI,EACb,SAAYnI,EACZ,KAAQsB,KAGT,EAGX,SAASkL,IAGL,IADgB1O,EAAiB,GAE7B,OAAO,KAGX,IAAIuD,EAAQlD,EAAE,gCAGV0B,EAAUwB,EAAMvB,KAAK,oCAAoCC,MAEzDuB,EAAOD,EAAMvB,KAAK,0BAA0BC,MAIhD,GAHa,IAARuB,GAAgB,QAAQA,KAAQC,QAAQC,OACzCD,QAAQC,KAAK,QAAQF,GAAQD,EAAMvB,KAAK,2BAA2BC,OAEvD,IAAXF,EAAgB,CACjB,IAAIgR,EAAMxP,EAAMvB,KAAK,eAAeD,EAAQ,MAAME,MAClD,GAAW,IAAP8Q,EAKA,OAJa,IAAI/U,WAAWgV,OAAOC,IAAI,CACnCC,mBAAoB,QAAQ1P,EAC5B2P,mBAAoBnT,EAAiB,GAAE7C,aAE7BiW,KAAKL,GAG3B,OAAO,KAiBX,SAASM,EAAsB3J,EAAU4J,EAAY9S,EAAUqJ,GAE3D,KAAO,kBAAmB5N,GACtB,OAAO,EAEX,IAAIsX,EAAU1S,OAAOkF,mBACjB2D,EACAzN,EAAOiL,cACP,WAEJ,IAAMqM,GAAoD,SAAzCA,EAAQ,GAAGpM,aAAaqM,cACrC,OAAO,EACX,IAAIC,EAAQF,EAAQ,GAChBG,EAAczX,EAAO+J,OAAOyN,GACjBF,EAAQ,GAAGjJ,MAAM,KAAKqJ,KAAK,KACrC,cAAeD,GAAwC,IAAzBA,EAAYE,WAChCF,EAAYE,UAE3B,IAAIC,EAAgBhS,QAAQ,0BAI5B,GAHKrB,IACDqT,GAAiB,KAAOrT,IAEtBiK,QAASoJ,GACX,OAAO,EAEX,IAAIC,EAAW9V,WAAW+M,KAAKC,UAAUC,QAAQ7C,QAC5CpK,WAAW+M,KAAKG,mBAAmBD,QAAQE,SAuBhD,OArBA9K,EAAEgC,IAAIyR,EAASjQ,QAAQ,aAAa,iBAAiB,CACjD7H,QAAS0N,EACTiB,UAAW2I,IACZ,SAASnR,GACR5B,EAAmB4B,EAAM,QAAQ,GAE5B0H,GACDA,EAAWH,EAAU4J,GAEzBzS,OAAOuC,OAAOC,aAAa,8BACvB,CACI,QAAWqG,EACX,UAAa4J,EACb,YAAeG,EACf,eAAiB,IAKzBxO,EAAcyE,OAEX,EA5kDf1L,WAAWoG,SAAS2P,eAAiB,SAASvP,EAAOwP,GAEjD,QAAGxP,EAAMT,EAAI2E,KAAKuL,IAAID,EAAQE,GAAIF,EAAQG,KAAO3P,EAAMT,EAAI2E,KAAK0L,IAAIJ,EAAQE,GAAIF,EAAQG,KACrF3P,EAAMP,EAAIyE,KAAKuL,IAAID,EAAQK,GAAIL,EAAQM,KAAO9P,EAAMP,EAAIyE,KAAK0L,IAAIJ,EAAQK,GAAIL,EAAQM,OAMpFN,EAAQE,IAAMF,EAAQG,IAAMH,EAAQK,IAAML,EAAQM,IACjD9P,EAAMT,GAAKiQ,EAAQE,IAAM1P,EAAMP,GAAK+P,EAAQK,IAC5C7P,EAAMT,GAAKiQ,EAAQG,IAAM3P,EAAMP,GAAK+P,EAAQM,MAM5CN,EAAQE,GAAK1P,EAAMT,IAAMiQ,EAAQK,GAAK7P,EAAMP,IAAIuD,QAAQ,MACxDwM,EAAQG,GAAK3P,EAAMT,IAAMiQ,EAAQM,GAAK9P,EAAMP,IAAIuD,QAAQ,KA8jD7D3G,OAAOuC,OAAOmR,GAAG,CACb,UAAY,SAASrT,GAEjBjF,EAAS4E,OAAO5E,OACP4E,OAAOmF,OAChBnI,EAAMgD,OAAOhD,IACbiC,EAAWe,OAAOf,SAElB,IAAI0U,EAAiB,CACjBC,2BAA6B,SAASC,GAClC1U,EAAanD,wBAA0BmD,EAAanD,wBAAwB8X,OAAOD,IAEvFE,0BAA4B,SAASF,GACjC1U,EAAapD,mBAAqBoD,EAAapD,mBAAmB+X,OAAOD,KAGjF7T,OAAOuC,OAAOC,aACV,2BACA,CACI,cAAkBmR,IAn3ClC,WAEI,GAAI,kBAAmBvY,EAAQ,CAE3B,IAAI4Y,EAAW,GACXC,EAAM,GACV,IAAK,IAAIC,KAAU9Y,EAAOiL,cAAe,CACrC,IAAI8N,EAAK/Y,EAAOiL,cAAc6N,GAC9B,GACqC,SAAjCC,EAAG7N,aAAapC,eACmB,SAAnCiQ,EAAG7N,aAAa8N,iBACiB,SAAjCD,EAAG7N,aAAaqM,eACkB,SAAlCwB,EAAG7N,aAAawH,gBAMpB,GACIoG,KAAU9Y,EAAO+J,QACmB,QAAjCgP,EAAG7N,aAAapC,cACrB,CACE,IAAImQ,EAAWjZ,EAAO+J,OAAO+O,GAC7BF,EAASG,EAAGG,OAAS,CAClBlY,GAAIiY,EAASjY,GACZmY,MAAOF,EAASE,MAChBD,MAAOH,EAAGG,OAEdL,EAAIzV,KAAK2V,EAAGG,oBAdLlZ,EAAOiL,cAAc6N,GAqBpC,IAAM,IAAIhH,KAHV+G,EAAIO,MAAK,SAAUC,EAAGC,GAClB,OAAOD,EAAIC,KAEAT,EACPI,EAAWL,EAASC,EAAI/G,IAC5B1N,EAAE,kBAAkBoN,OAAO,kBAAkByH,EAASjY,GAAG,KAAKiY,EAASE,MAAM,aAE7EpO,IACA3G,EAAE,6BAA6B2C,OAG/B3C,EAAE,qBAAqB2C,OAG3BhD,EAAatC,eACb,IAAI8X,EAAYxV,EAAavD,GAoD7B,IAAM,IAAIwS,KAjDVlP,EAAY,CACRgH,MAAO,IAAI/I,WAAW2I,QAAQ,CAC1B8O,KAAMzX,WAAW2I,QAAQ+O,UACzBC,eAAgB,CACZ5G,SAAU,SAAU7N,GAChBL,OAAO+U,uBAAwB1U,GACM,OAAhCL,OAAOf,SAAS+V,aACjBhV,OAAOf,SAAS+V,YAAYvY,cAEpCA,WAAY,SAAU4D,GAClB,IAAM,IAAI4U,KAAK/V,EACD,SAAL+V,GAAgB/V,EAAU+V,GAAGzY,QAC9B0C,EAAU+V,GAAGxY,aAEgB,OAAhCuD,OAAOf,SAAS+V,aACjBhV,OAAOf,SAAS+V,YAAY9G,eAI5CvK,MAAO,IAAIxG,WAAW2I,QAAQoP,YAAYP,EACrCxX,WAAWgY,QAAQ3R,MAAM,CACtBsR,eAAgB,CACZ5G,SAAUzL,EACVhG,WAAYwF,KAGxBmT,KAAM,IAAIjY,WAAW2I,QAAQoP,YAAYP,EACrCxX,WAAWgY,QAAQE,KAAK,CACpBP,eAAgB,CACZ5G,SAAUzL,EACVhG,WAAYwF,KAGxBqT,QAAS,IAAInY,WAAW2I,QAAQoP,YAAYP,EACxCxX,WAAWgY,QAAQI,QAAQ,CACvBT,eAAgB,CACZ5G,SAAUzL,EACVhG,WAAYwF,KAGxB2D,OAAQ,IAAIzI,WAAW2I,QAAQC,cAAc4O,GAC7Ca,QAAS,IAAIrY,WAAW2I,QAAQ2P,MAAM,CAAC3W,MAAM6V,EAAUG,eAAgB,CAACY,WAAWtV,KACnFuV,UAAW,IAAIxY,WAAW2I,QAAQ2P,MAAM,CACpC3W,MAAM6V,EACNG,eAAgB,CACZc,YAAY/U,EACZ6U,WAAWzU,MAIN,SAARmN,GACDlP,EAAUkP,GAAM7L,OAAOmR,GAAG,CACtBxF,SAAU,SAAU7N,GAChBA,EAAIwV,OAAO/W,MAAMgX,eAAc,IAEnCrZ,WAAY,SAAU4D,GAClBA,EAAIwV,OAAO/W,MAAMgX,eAAc,MAG3C9Y,EAAI+Y,YAAY,CAAC7W,EAAUkP,KAE/BnP,EAAkB,QAAIC,EAAUgH,MAIhCyO,EAAUpS,OAAOmR,GAAG,CAEhBsC,aAAc,WAEV,IAAK9W,EACD,OAAO,EACX,IAAI/C,EAAegD,EAAahD,aAC5B8Z,EAAmB/W,EAAU/C,GAAcK,OAC3CyZ,GACA/W,EAAU/C,GAAcM,aAG5B,IAAI0B,EAAOwW,EAAU1W,SAAS,GAG9B0C,EAAiCxC,IAG7B8X,GAA0E,QAAtD9W,EAAqB,OAAEmH,aAAawH,kBAExD5O,EAAUgH,MAAMgI,WAEhBhP,EAAU0G,OAAOsI,WACjB1O,EAAE,8BAA8BoB,QAChC1B,EAAU0G,OAAOuI,cAAehQ,GACX,SAAjBhC,GACAqD,EAAE,wCAAwC8C,SAAS,QAElC,UAAjBnG,GACAqD,EAAE,+BAA+BsD,QAMpB,UAAjB3G,IACAqD,EAAE,oCAAoCqR,IAAI,QAC1CrR,EAAE,uBAAuB2C,QAI7BzC,EAAkBsB,QAAQ,kCAAkC,QAAO,IAGvEkV,gBAAiB,SAAS7V,GACO,MAAxBA,EAAIpF,QAAQuF,UAGjBG,EAAiCN,EAAIpF,UAIzCkb,gBAAiB,SAAS9V,GACjBA,EAAIpF,QAAQuF,UAKrB4V,kBAAmB,SAAS/V,GACK,MAAxBA,EAAIpF,QAAQuF,UAGjBG,EAAgCN,EAAIpF,UAGxCob,eAAgB,SAAShW,GAErB,GAAIb,EAAE,oCAAoC4C,GAAG,YAAY,CACrD,IAAK4B,EAAKC,GAAOjE,OAAOsH,WAAWgP,YAAYC,iBAAiBpX,EAAiB,GAAE7C,YACnF+D,EAAIiD,OAAOJ,EAAIc,EACf3D,EAAIiD,OAAOF,EAAIa,OAGfsC,EADalG,EAAIiD,OAAOmF,SAI5B5E,EAA8BxD,EAAIpF,QAAQuF,WAG9CgW,eAAgB,SAASnW,OAI7Bb,EAAE,iBAAiBoB,OAAM,WAErB,GAAKpB,EAAE3E,MAAMiV,SAAS,YAClB,OAAO,EAEX,GAAI9P,OAAO0F,eAAe,CACtB,IAAMkE,QAAS5I,QAAQ,2BACnB,OAAO,EACXyE,IACAtG,EAAavC,QAQjB,OAJAsC,EAAUgH,MAAMgI,WAGhBtF,EAAepJ,EAAE,kBAAkB4B,MAAO,OACnC,KAGX5B,EAAE,6BAA6ByP,QAAO,WAClC,OAAO,KAEXzP,EAAE,4BAA4BkO,QAAO,WAC0B,OAAvDxO,EAAUC,EAAahD,cAAcuH,QAAQC,OAE7C4C,EADarH,EAAUC,EAAahD,cAAcuH,QAAQC,MAAMnD,SAASiI,YAIjFjJ,EAAE,0BAA0BiX,MAAMxT,GAClCzD,EAAE,0BAA0BiX,MAAMxT,GAClCzD,EAAE,oCAAoCkO,QAAO,WACzC,GAAKlO,EAAE3E,MAAMuH,GAAG,aAIZ,GAHA5C,EAAE,0BAA0BU,KAAK,WAAW,YAC5CV,EAAE,0BAA0BU,KAAK,WAAW,YAExCF,OAAOsH,WAAWgP,YAAYI,WAAW,CACzC,IAAIva,EAAegD,EAAahD,cAC3B6H,EAAKC,GAAOjE,OAAOsH,WAAWgP,YAAYC,iBAAiBpX,EAAiB,GAAE7C,YACnF,GAAI0H,GAAOC,EAAI,CACX,IAAIH,EAAK5E,EAAU/C,GAAcuH,QAAQ5E,MAAMiF,wBAAwB,CAAEC,IAAKA,EAAKC,IAAKA,IACxF/E,EAAU/C,GAAcuH,QAAQiT,cAAc7S,GAG9CyC,EAAmB,IAAIpJ,WAAWoG,SAASC,MAAMQ,EAAKC,WAI9DzE,EAAE,0BAA0BoX,WAAW,YACvCpX,EAAE,0BAA0BoX,WAAW,YAE3C5W,OAAOsH,WAAWgP,YAAYO,kBAAoBrX,EAAE3E,MAAMuH,GAAG,eAEjE5C,EAAE,4BAA4BoB,OAAM,WAChC,IAAIzE,EAAegD,EAAahD,aAChC,GAAoB,SAAhBA,GAA2B+C,EAAU/C,GAAcuH,QAAQC,MAAO,CAClE,IAAImT,EAAO5X,EAAU/C,GAAcuH,QAAQC,MAAMnD,SACjDtB,EAAU/C,GAAcuH,QAAQqT,SAASD,EAAK5T,EAAG4T,EAAK1T,OAG9D5D,EAAE,+BAA+BoB,OAAM,WACnC,IAAIzE,EAAegD,EAAahD,aAG5B+C,EAAU/C,GAAcuH,QAAQsT,gBACX,UAAjB7a,GAEI6D,OAAOsH,WAAW2P,kBAAkBC,wBAAqFC,IAAhEnX,OAAOsH,WAAW2P,kBAAkBG,0BAC7FlY,EAAU/C,GAAcuH,QAAQC,MAAMnD,SAAS0C,EAAIlD,OAAOsH,WAAW2P,kBAAkBG,wBAAwB,GAC/GlY,EAAU/C,GAAcuH,QAAQC,MAAMnD,SAAS4C,EAAIpD,OAAOsH,WAAW2P,kBAAkBG,wBAAwB,GAC/GlY,EAAU/C,GAAcuH,QAAQS,eAEpCjF,EAAU/C,GAAcuH,QAAQ2T,YAEhCnY,EAAU/C,GAAcuH,QAAQ4T,qBAK5C9X,EAAE,8BAA8BoB,OAAM,WAClC1B,EAAUsW,QAAQ/Y,aAClByC,EAAUyW,UAAUlZ,aACpByC,EAAU0G,OAAOC,KAAO1I,WAAW2I,QAAQC,cAAcC,QACzD9G,EAAU0G,OAAOK,gBAAiB,EAClC/G,EAAU0G,OAAOsI,WACjB,IAAI/P,EAAOgB,EAAanB,aACpBG,EAAKqC,WAEAtB,EAAU0G,OAAO3K,SAClBiE,EAAU0G,OAAO2R,gBAAiBpZ,GACtCe,EAAU0G,OAAOuI,cAAehQ,OAGxCqB,EAAE,0BAA0BoB,OAAM,WAC9B1B,EAAUsW,QAAQ/Y,aAClByC,EAAUyW,UAAUlZ,aACpByC,EAAU0G,OAAOC,KAAO1I,WAAW2I,QAAQC,cAAcyR,KACzDtY,EAAU0G,OAAOK,gBAAiB,EAClC/G,EAAU0G,OAAOsI,WACjB,IAAI/P,EAAOgB,EAAanB,aACpBG,IAEKe,EAAU0G,OAAO3K,SAClBiE,EAAU0G,OAAO2R,gBAAiBpZ,GACtCe,EAAU0G,OAAOuI,cAAehQ,OAGxCqB,EAAE,4BAA4BoB,OAAM,WAChC1B,EAAUsW,QAAQ/Y,aAClByC,EAAUyW,UAAUlZ,aACpByC,EAAU0G,OAAOC,KAAO1I,WAAW2I,QAAQC,cAAc0R,OACzDvY,EAAU0G,OAAOK,gBAAiB,EAClC/G,EAAU0G,OAAOsI,WACjB,IAAI/P,EAAOgB,EAAanB,aACpBG,IAEKe,EAAU0G,OAAO3K,SAClBiE,EAAU0G,OAAO2R,gBAAiBpZ,GACtCe,EAAU0G,OAAOuI,cAAehQ,OAGxCqB,EAAE,6BAA6BoB,OAAM,WACjC,IAAIzC,EAAOgB,EAAanB,aACpBG,GAAQe,EAAU0G,OAAO3K,SACzBiE,EAAU0G,OAAO2R,gBAAgBpZ,GAErCe,EAAU0G,OAAOnJ,aACjByC,EAAUyW,UAAUlZ,aACpByC,EAAUsW,QAAQtH,cAGtB1O,EAAE,2BAA2BoB,OAAM,WAC/B,IAAIzC,EAAOgB,EAAanB,aACpBG,GAAQe,EAAU0G,OAAO3K,SACzBiE,EAAU0G,OAAO2R,gBAAgBpZ,GAErCe,EAAU0G,OAAOnJ,aACjByC,EAAUsW,QAAQ/Y,aAClByC,EAAUyW,UAAUzH,cAGxB1O,EAAE,2DAA2DkY,QAAS,CAClEC,UAAW,QAMf3X,OAAO4X,oBAAoBC,aACvB,KACI,MAAMC,EAAwB9X,OAAOsH,WAAWgP,YAAYI,WAC5DlX,EAAE,0CAA0CuY,OAAOD,GAC/CA,EACItY,EAAE,oCAAoC4C,GAAG,cACzC5C,EAAE,0BAA0BU,KAAK,WAAY,YAC7CV,EAAE,0BAA0BU,KAAK,WAAY,cAGjDV,EAAE,0BAA0BoX,WAAW,YACvCpX,EAAE,0BAA0BoX,WAAW,eAG/C,0BAIJ5W,OAAO4X,oBAAoBC,aACvB,KACI,GAAI1Y,GAAiB,WAAYA,EAAgB,CAC7CK,EAAE,oCAAoCoX,WAAW,YACjD,IAAIza,EAAegD,EAAahD,aAChC,GAAIqD,EAAE,oCAAoC4C,GAAG,aAAelD,EAAU/C,GAAcK,OAAS,CAEzF,IAAKwH,EAAKC,GAAOjE,OAAOsH,WAAWgP,YAAYC,iBAAiBpX,EAAiB,GAAE7C,YAC/EwH,EAAK5E,EAAU/C,GAAcuH,QAAQ5E,MAAMiF,wBAAwB,CAAEC,IAAKA,EAAKC,IAAKA,IACxF/E,EAAU/C,GAAcuH,QAAQiT,cAAc7S,GAE9CyC,EAAmB,IAAIpJ,WAAWoG,SAASC,MAAMQ,EAAKC,QAIlE,6BAGJzE,EAAE,YAAYnE,SAASoE,SACvBD,EAAE,mBAAmBC,SACrBD,EAAE,2BAA2B2C,OAu/B7B6V,GAEAhY,OAAO4I,cAAgB,SAAUC,EAAUC,EAAMC,EAASC,GACtD,OAAOJ,EAAeC,EAAUC,EAAMC,EAASC,IAGnDhJ,OAAOwS,qBAAuB,SAAU3J,EAAUC,EAAMnJ,EAAUqJ,GAC9D,OAAOwJ,EAAsB3J,EAAUC,EAAMnJ,EAAUqJ,IAG3DhJ,OAAOuC,OAAOmR,GAAG,CACbuE,qBAAsB,SAASC,GAC3B,IAAIC,GAAY,EACZC,EAAQF,EAAEE,MACVjI,EAAW,6DAKf,GAJK+H,EAAEG,cACHlI,EAAW,IAAK+H,EAAEG,YAAa,IAAKlI,GAGpC3Q,EAAE2Q,GAAU/O,MAAM,CAKlB,IAAIkX,EAAiB,GACjBC,EAAqB,GACrBC,EAAW,GACfhZ,EAAE2Q,GAAUsI,MAAK,WAEb,IACIrX,EADO5B,EAAE3E,MACEuG,MACX4M,EAAM5M,EAAIqI,MAAM,KAAKf,MACrBvN,EAAUiG,EAAI4B,QAAQ,IAAMgL,EAAK,IAIrC,GAHkBhO,OAAOkF,mBAAmB/J,GAGxC,kBAAmBC,KAAYD,KAAWmd,GAAiB,CAE3D,IAAI5F,EAAU,KACV,kBAAmBtX,IACnBsX,EAAU1S,OAAOkF,mBACb/J,EACAC,EAAOiL,cACP,WAIJkS,EAAmB/Z,KAAKrD,GACxBmd,EAAend,GAAW,CAAC,eAAkBuX,QAMzD,IAAK,MAAMxF,KAAKqL,EAAoB,CAChC,IAAInc,EAAKmc,EAAmBrL,GACxBwL,EAAe,CACfC,WAAYvO,QAAQE,OAAOqO,WAC3BC,QAASxO,QAAQE,OAAOsO,QACxBzd,QAASiB,GAETyc,EAAY1b,WAAW+M,KAAKC,UAC5BC,QAAQ7C,QAAQvE,QAAQ,aAAc,oBACtC7F,WAAW+M,KAAKG,mBAAmBqO,IAEvC,MAAMI,EAAUxI,MAAMuI,GAAWnJ,MAAK,SAAUpE,GAC5C,OAAOA,EAASoF,UAEpB8H,EAASha,KAAKsa,GAIlB3H,QAAQ4H,IAAIP,GAAU9I,MAAKsJ,IACvB,IAAK,MAAM9L,KAAKqL,EAAoB,CAChC,IAAIjX,EAAO0X,EAAU9L,GACjB/R,EAAUod,EAAmBrL,GACjC,IAAI+L,GAAiB,EACjBC,EAAqB,GAEzB,GAAI,YAAa5X,GACbA,EAAc,SACd,WAAYA,GACM,cAAlBA,EAAa,OAAmB,CAEhC2X,GAAiB,EACjB,IAAK,MAAMhe,KAAWqG,EAAKrD,SACvBib,EAAmB1a,KAAKvD,EAAQmB,GAAGqN,MAAM,KAAK,IAItD6O,EAAend,GAA+B,qBAAI+d,EAClDZ,EAAend,GAA0B,gBAAI8d,EAIjDzZ,EAAE2Q,GAAUsI,MAAK,WAEb,IAAIjL,EAAOhO,EAAE3E,MACTuG,EAAMoM,EAAKpM,MACX4M,EAAM5M,EAAIqI,MAAM,KAAKf,MACrBvN,EAAUiG,EAAI4B,QAAQ,IAAMgL,EAAK,IACjCmL,EAAcnZ,OAAOkF,mBAAmB/J,GACxCie,EAAU,KACV1G,EAAU,KAKd,GAJIvX,KAAWmd,IAEX5F,GADA0G,EAAUd,EAAend,IACS,gBAElCie,KAAaA,EAAyB,iBAAKA,EAA8B,qBAAEC,SAASrL,IAAM,CAC1F,IAAIsL,EAAQ,GAqBZ,IAlBI5G,GAC4C,QAA3CA,EAAQ,GAAGpM,aAAa8N,iBAAuE,QAA1C1B,EAAQ,GAAGpM,aAAawH,gBACQ,GAAnFN,EAAK0D,KAAK,uBAAuB/P,KAAK,mCAAmCjE,SAE5Eoc,GAAS,wDACTA,GAAS,WAAalY,EAAM,IAC5BkY,GAAS,WAAatY,QAAQ,kCAAoC,gDAIlE0R,GAAoD,QAAzCA,EAAQ,GAAGpM,aAAaqM,eACqD,GAArFnF,EAAK0D,KAAK,uBAAuB/P,KAAK,qCAAqCjE,SAE9Eoc,GAAS,0DACTA,GAAS,WAAalY,EAAM,IAC5BkY,GAAS,WAAatY,QAAQ,oCAAsC,+CAG3D,IAATsY,EAAa,CACb,IAAIC,EAAiB/L,EAAK0D,KAAK,uBACF,GAAzBqI,EAAerc,OACfqc,EAAe3M,OAAO0M,IAEtBA,EAAQ,gCAAkCA,EAAQ,eAClD9L,EAAKgM,MAAMF,IAEf9L,EAAKrM,KAAK,cAAcuW,QAAQ,CAC5BC,UAAW,WAEfQ,GAAY,EACRC,GACAA,EAAMqB,cAIlBzZ,OAAOuC,OAAOC,aAAa,mCACvB,CACI4V,MAAOA,EACPpK,IAAKA,EACL7S,QAASA,EACTuX,QAASA,EACTgH,UAAWP,EAAY,GACvBA,YAAaA,EAAY,GACzBQ,IAAKnM,EAAKnS,cAKlB8c,IAEA3Y,EAAE,0DACGwK,OAAO,SACPpJ,OAAM,WACH,IAAIoN,EAAMxO,EAAE3E,MAAMuG,MAAMqI,MAAM,KAAKf,MAC/BvN,EAAUqE,EAAE3E,MAAMuG,MAAM4B,QAAQ,IAAMgL,EAAK,IAQ/C,OANAhO,OAAO4I,cAAczN,EAAS6S,GAGE,GAA5BhO,OAAOhD,IAAI4c,OAAO1c,QAClB8C,OAAOhD,IAAI6c,YAAY7Z,OAAOhD,IAAI4c,OAAO,KAEtC,KAEVE,OACG,WAActa,EAAE3E,MAAMyH,SAAS,kBAC/B,WAAc9C,EAAE3E,MAAM8K,YAAY,kBAErC+R,UAGLlY,EAAE,4DACGwK,OAAO,SACPpJ,OAAM,WACH,IAAIoN,EAAMxO,EAAE3E,MAAMuG,MAAMqI,MAAM,KAAKf,MAUnC,OANA8J,EAHchT,EAAE3E,MAAMuG,MAAM4B,QAAQ,IAAMgL,EAAK,IAGjBA,GAGE,GAA5BhO,OAAOhD,IAAI4c,OAAO1c,QAClB8C,OAAOhD,IAAI6c,YAAY7Z,OAAOhD,IAAI4c,OAAO,KAEtC,KAEVE,OACG,WAActa,EAAE3E,MAAMyH,SAAS,kBAC/B,WAAc9C,EAAE3E,MAAM8K,YAAY,kBAErC+R,UAIL1X,OAAOuC,OAAOC,aAAa,qBACvB,CAAE,MAAS4V,eA1qE9B,GA8rEjBxd,EAAyBqB,UAAY,CACjC8d,MAAQ,SAASjZ,GACbjG,KAAKC,QAAU,GACfD,KAAKiG,KAAOA,EACZtB,EAAE,IAAIsB,EAAKsF,KAAK,kBAAkBT,YAAY,gBAC9CnG,EAAE,IAAIsB,EAAKsF,KAAK,WAAW4T,QAAQ7X,QAEvC8X,SAAW,SAASC,EAASC,GACzB,IAAIvL,EAAM/T,KAAKiG,KAAKmP,QAAQmK,SAASF,EAAQ9T,MACzCwI,GAAOA,EAAIyL,UACX7a,EAAEoP,GAAKtM,SAAS,gBAEpB,IAAI8D,EAAO8T,EAAQ9T,KAAKpD,QAAQ,OAAQ,IACxCxD,EAAE,IAAI3E,KAAKiG,KAAKsF,KAAK,IAAIA,EAAK,UAAU9D,SAAS,gBAG7CzH,KAAKC,SADS,GAAfqf,EACkB,qBAAqBD,EAAQI,YAAc,OACxC,GAAfH,EACY,qBAAsBD,EAAQK,WAAa,OAE3C,gCAAgCL,EAAQrO,MAAM,UAGvE2O,IAAM,WACF,IAAIC,EAAQ5f,KAAKiG,KAAKsF,KAAK,UACvBuT,EAAMe,SAASC,eAAeF,GACf,IAAhB5f,KAAKC,SACC6e,KACDA,EAAMe,SAASE,cAAc,QACzBC,aAAa,QAAS,mDAC1BlB,EAAIkB,aAAa,KAAMJ,GACvBjb,EAAE3E,KAAKiG,KAAKmP,SAASgB,QAAQ6J,OAAOnB,IAE7Bna,EAAEma,GACRxX,OAAOD,KAAKrH,KAAKC,SAASigB,UAE1BpB,GACLna,EAAEma,GAAKxX,SAKnBrC,OAAOlF,yBAA2BA,G","sources":["webpack://assets/./src/legacy/edition.js"],"sourcesContent":["var lizEdition = function() {\n\n    function FeatureEditionData(layerID, feature, relation) {\n        /** @var {string} QGIS layer id */\n        this.layerId = layerID;\n        /** @var {Object} QGIS layer config */\n        this.config = null;\n        /** @var {} */\n        this.feature = feature;\n        /** @var {} */\n        this.relation = relation;\n        /** @var {FeatureEditionData}  parent feature */\n        this.parent = null;\n        /** @var {boolean} backToParent tell if we can edit the parent after a save */\n        this.backToParent = false;\n        /** @var {[Feature, FormData][]} new features to save on submit (features created after a split) */\n        this.newfeatures = [];\n    }\n    FeatureEditionData.prototype = {\n        setParentToEditAfterSave: function (parent) {\n            this.backToParent = (!!parent);\n            this.parent = parent;\n        },\n        get geometryType () {\n            if (this.config) {\n                return this.config.geometryType;\n            }\n            return '';\n        },\n    };\n\n    function EditionLayerData() {\n        /** @var {boolean} If the layer is spatial or not */\n        this.spatial = false;\n        /** @var {Object} draw control */\n        this.drawControl = null;\n        /** @var {string} Which submit button has been clicked */\n        this.submitActor = 'submit';\n        /** @var {OpenLayers.Layer.Vector} OL layer editLayer for edition */\n        this.ol = null;\n        /** @var {FeatureEditionData}  the current data about the edited feature */\n        this.currentFeature = null;\n        /** @var {OpenLayers.Layer.Vector}  layer editSplitLayer to stores temporary geometry of new features */\n        this.splitOl = null;\n\n        /** @var {OpenLayers.Rule[]} custom rules for the editLayer */\n        this.olStyleCustomRules = [];\n        /** @var {OpenLayers.Rule[]} custom rules for the editSplitLayer */\n        this.splitOlStyleCustomRules = [];\n\n    }\n    EditionLayerData.prototype = {\n        get config () {\n            return this.currentFeature.config;\n        },\n\n        get geometryType () {\n            if (this.currentFeature && this.currentFeature.config) {\n                return this.currentFeature.config.geometryType;\n            }\n            return '';\n        },\n\n        get newfeatures () {\n            return this.currentFeature.newfeatures\n        },\n\n        get id () {\n            return this.currentFeature.layerId\n        },\n\n        get parent() {\n            return this.currentFeature.parent;\n        },\n\n        get projCode() {\n            return this.ol.projection.projCode;\n        },\n\n        deactivateControl : function() {\n            if (this.drawControl && this.drawControl.active) {\n                this.drawControl.deactivate();\n            }\n        },\n\n        clearLayers: function() {\n            if (this.ol) {\n                this.ol.destroyFeatures();\n            }\n\n            if (this.splitOl) {\n                this.splitOl.destroyFeatures();\n            }\n        },\n\n        clear: function() {\n            this.currentFeature = null;\n            this.spatial = false;\n            this.drawControl = null;\n            this.submitActor = 'submit';\n            this.clearLayers();\n        },\n\n        createLayers : function() {\n            // Initialize layer for features created after a split\n            var style, styleMap;\n            var splitLayer = map.getLayersByName('editSplitLayer');\n            if (splitLayer.length == 0) {\n                style = new OpenLayers.Style();\n                style.addRules([\n                    new OpenLayers.Rule({\n                        symbolizer: {\n                            \"Point\": {\n                                pointRadius: 6\n                            },\n                            \"Line\": {\n                                strokeWidth: 4,\n                                fillColor: \"#1353ac\",\n                                strokeColor: \"#d6eeff\"\n                            },\n                            \"Polygon\": {\n                                strokeWidth: 2\n                            }\n                        }\n                    })\n                ]);\n\n                if (this.splitOlStyleCustomRules.length) {\n                    style.addRules(this.splitOlStyleCustomRules);\n                }\n\n                styleMap = new OpenLayers.StyleMap({\"default\": style});\n                this.splitOl = new OpenLayers.Layer.Vector('editSplitLayer', {styleMap: styleMap});\n                map.addLayer(this.splitOl);\n            }\n\n            // initialize layer\n            var editLayer = map.getLayersByName( 'editLayer' );\n            if (editLayer.length == 0) {\n                style = new OpenLayers.Style();\n                style.addRules([\n                    new OpenLayers.Rule({symbolizer:  {\n                            \"Point\": {\n                                pointRadius: 6\n                            },\n                            \"Line\": {\n                                strokeWidth: 4,\n                            },\n                            \"Polygon\": {\n                                strokeWidth: 2\n                            }\n                        }})\n                ]);\n\n                if (this.olStyleCustomRules.length) {\n                    style.addRules(this.olStyleCustomRules);\n                }\n\n                styleMap = new OpenLayers.StyleMap({\"default\": style});\n                this.ol = new OpenLayers.Layer.Vector('editLayer',{styleMap:styleMap});\n                map.addLayer(this.ol);\n            }\n        },\n\n        getFeature : function() {\n            if (this.spatial && this.ol && this.ol.features.length != 0) {\n                return this.ol.features[0];\n            }\n            return null;\n        },\n\n        removeEditedFeature : function(feat) {\n            this.ol.removeFeatures( [feat]);\n        },\n\n        /**\n         *\n         * @param {object} feat\n         * @param {FormData} formData\n         */\n        moveEditedFeatureToSplitLayer : function(feat, formData) {\n            this.ol.removeFeatures( [feat]);\n            this.splitOl.addFeatures([feat]);\n            this.currentFeature.newfeatures.push([feat, formData]);\n        },\n\n        setDrawControl: function(drawControl) {\n            this.drawControl = drawControl;\n            this.spatial = true;\n        },\n\n        replaceFeature: function (newFeature) {\n            this.clearLayers();\n            this.ol.addFeatures([newFeature]);\n        },\n\n        canEditParentFeature : function() {\n            return (this.currentFeature.parent != null && this.currentFeature.backToParent);\n        },\n\n        restoreSplitFeatures : function() {\n            var layer = this.splitOl;\n            layer.destroyFeatures();\n            var featList = this.currentFeature.newfeatures.map(function(newFeat){ return newFeat[0]; });\n            if (featList.length) {\n                layer.addFeatures(featList);\n            }\n        }\n    };\n\n    var config = null;\n    var layers = null;\n    var map = null;\n    var controls = null;\n\n    // Map control for edition\n    var editCtrls = null;\n\n    // Edition layer data\n    var editionLayer = new EditionLayerData();\n\n    // Edition type : createFeature or modifyFeature\n    var editionType = null;\n\n    // Edition message management\n    var editionMessageTimeoutId = null;\n    function cleanEditionMessage() {\n        var $EditionMessage = $('#lizmap-edition-message');\n        if ( $EditionMessage.length != 0 ) {\n            $EditionMessage.remove();\n        }\n        editionMessageTimeoutId = null;\n    }\n    function addEditionMessage(aMessage, aType, aClose){\n        if ( editionMessageTimeoutId ) {\n            window.clearTimeout(editionMessageTimeoutId);\n            editionMessageTimeoutId = null;\n        }\n        var $EditionMessage = $('#lizmap-edition-message');\n        if ( $EditionMessage.length != 0 ) {\n            $EditionMessage.remove();\n        }\n        lizMap.addMessage(aMessage, aType, aClose).attr('id','lizmap-edition-message');\n        editionMessageTimeoutId = window.setTimeout(cleanEditionMessage, 5000);\n    }\n\n    function afterReshapeSpliting(evt) {\n        var splitFeatures = evt.features;\n        var geometryType = editionLayer.geometryType;\n        var removableFeat = null;\n        if ( geometryType == 'line' ) {\n            if ( splitFeatures[0].geometry.getLength() < splitFeatures[1].geometry.getLength() )\n                removableFeat = splitFeatures[0];\n            else\n                removableFeat = splitFeatures[1];\n        }\n        else if ( geometryType == 'polygon' ) {\n            if ( splitFeatures[0].geometry.getArea() < splitFeatures[1].geometry.getArea() )\n                removableFeat = splitFeatures[0];\n            else\n                removableFeat = splitFeatures[1];\n        }\n        if (removableFeat) {\n            editionLayer.removeEditedFeature(removableFeat);\n        }\n        // Update form geometry field from added geometry\n        var feat = editionLayer.getFeature();\n        if (feat) {\n            updateGeometryColumnFromFeature(feat);\n        }\n        $('#edition-geomtool-nodetool').click();\n        return false;\n    }\n\n\n    function beforeFeatureSpliting(evt) {\n\n        var form = $('#edition-form-container form');\n        if (checkFormBeforeSubmit(form) !== 'ok') {\n            // content of the form is not good, we couldn't create a new feature\n            addEditionMessage(lizDict['edition.splitfeat.form.error'],'error',true);\n            return false;\n        }\n        if (!form.attr('data-new-feature-action')) {\n            addEditionMessage(lizDict['edition.splitfeat.tech.error'],'error',true);\n            return false;\n        }\n        return true;\n    }\n\n\n    function afterFeatureSpliting(evt) {\n\n        // determine the two new geometry\n        var splitFeatures = evt.features;\n        var geometryType = editionLayer.geometryType;\n        var newFeature = null;\n        if ( geometryType == 'line' ) {\n            if ( splitFeatures[0].geometry.getLength() < splitFeatures[1].geometry.getLength() )\n                newFeature = splitFeatures[0];\n            else\n                newFeature = splitFeatures[1];\n        }\n        else if ( geometryType == 'polygon' ) {\n            if ( splitFeatures[0].geometry.getArea() < splitFeatures[1].geometry.getArea() )\n                newFeature = splitFeatures[0];\n            else\n                newFeature = splitFeatures[1];\n        }\n\n        // store one of the new geometry (the most little one), as a new feature\n        if (newFeature) {\n            var form = $('#edition-form-container form');\n            // Get edition datasource geometry column name\n            var gColumn = form.find('input[name=\"liz_geometryColumn\"]').val();\n            var geom = '';\n            // create a new form that will be used to store the new feature\n            var data = new FormData(form.get(0));\n            if ('set' in data) {\n                data.set('liz_featureId', '');\n                data.set('__JFORMS_TOKEN__', '');\n                if (gColumn) {\n                    geom = calculateGeometryColumnFromFeature(newFeature);\n                    data.set(gColumn, geom);\n                }\n            }\n            else {\n                // IE/Edge<12 workaround - no support of FormData.set()\n                var featureIdField = form.find('input[name=\"liz_featureId\"]');\n                var geomField = form.find('input[name=\"'+gColumn+'\"]');\n                var tokenField = form.find('input[name=\"__JFORMS_TOKEN__\"]');\n                var oldFeatureId = featureIdField.val();\n                var oldGeom = geomField.val();\n                var oldToken = tokenField.val();\n                featureIdField.val('');\n                tokenField.val('');\n                if (gColumn) {\n                    geom = calculateGeometryColumnFromFeature(newFeature);\n                    geomField.val(geom);\n                }\n                data = new FormData(form.get(0));\n                featureIdField.val(oldFeatureId);\n                geomField.val(oldGeom);\n                tokenField.val(oldToken)\n            }\n            // move new feature into the temporary layer\n            editionLayer.moveEditedFeatureToSplitLayer(newFeature, data);\n        }\n\n        // Update geometry column with the other geometry\n        var feat = editionLayer.getFeature();\n        if (feat) {\n            updateGeometryColumnFromFeature( feat );\n        }\n        $('#edition-geomtool-nodetool').click();\n        return false;\n    }\n\n\n/**\n * Function: OpenLayers.Geometry.pointOnSegment\n * Note that the OpenLayers.Geometry.segmentsIntersect doesn't work with points\n *\n * Parameters:\n * point - {Object} An object with x and y properties representing the\n *     point coordinates.\n * segment - {Object} An object with x1, y1, x2, and y2 properties\n *     representing endpoint coordinates.\n *\n * Returns:\n * {Boolean} Returns true if the point is on the segment.\n */\nOpenLayers.Geometry.pointOnSegment = function(point, segment) {\n    // Is the point inside the BBox of the segment\n    if(point.x < Math.min(segment.x1, segment.x2) || point.x > Math.max(segment.x1, segment.x2) ||\n       point.y < Math.min(segment.y1, segment.y2) || point.y > Math.max(segment.y1, segment.y2))\n    {\n        return false;\n    }\n\n    // Avoid dividing by zero\n    if( segment.x1 == segment.x2 || segment.y1 == segment.y2 ||\n        (point.x == segment.x1 && point.y == segment.y1) ||\n        (point.x == segment.x2 && point.y == segment.y2) )\n    {\n        return true;\n    }\n\n    // Is the point on the line\n    if(((segment.x1 - point.x) / (segment.y1 - point.y)).toFixed(5) ==\n       ((segment.x2 - point.x) / (segment.y2 - point.y)).toFixed(5))\n    {\n        return true;\n    }\n\n    return false;\n};\n\n    function deactivateDrawFeature() {\n        $('#edition-point-coord-crs-layer').html(lizDict['edition.point.coord.crs.layer']).val('').hide();\n        $('#edition-point-coord-crs-map').html(lizDict['edition.point.coord.crs.map']).val('').hide();\n        $('#edition-point-coord-x').val('');\n        $('#edition-point-coord-y').val('');\n        if ( $('#edition-point-coord-geolocation').is(':checked') )\n            $('#edition-point-coord-geolocation').click();\n        $('#edition-point-coord-add').hide();\n        $('#edition-segment-length').parents('.control-group').addClass('hidden');\n        $('#edition-segment-angle').parents('.control-group').addClass('hidden');\n\n        lizMap.events.triggerEvent(\"lizmapeditiondrawfeaturedeactivated\",\n            {\n                'layerId': editionLayer['id'],\n                'editionConfig': editionLayer['config']\n            }\n        );\n    }\n\n    function activateDrawFeature() {\n        var eform = $('#edition-form-container form');\n        var srid = eform.find('input[name=\"liz_srid\"]').val();\n        if ( srid != '' && !('EPSG:'+srid in Proj4js.defs) )\n            Proj4js.defs['EPSG:'+srid] = eform.find('input[name=\"liz_proj4\"]').val();\n        $('#edition-point-coord-crs-layer').html(lizDict['edition.point.coord.crs.layer']+' - EPSG:'+srid).val(srid).show();\n\n        var mapProjCode = editionLayer.projCode;\n        var mapSrid = mapProjCode.replace('EPSG:','');\n        $('#edition-point-coord-crs-map').html(lizDict['edition.point.coord.crs.map']+' - EPSG:'+mapSrid).val(mapSrid).show();\n\n        if ( editionLayer.geometryType == 'point' )\n            $('#edition-point-coord-add').hide();\n        else\n            $('#edition-point-coord-add').show();\n\n        $('#handle-point-coord').show();\n\n        lizMap.events.triggerEvent(\"lizmapeditiondrawfeatureactivated\",\n            {\n                'layerId': editionLayer['id'],\n                'editionConfig': editionLayer['config'],\n                'drawControl': editionLayer['drawControl']\n            }\n        );\n    }\n\n    function keyUpPointCoord() {\n        var x = parseFloat($('#edition-point-coord-x').val());\n        var y = parseFloat($('#edition-point-coord-y').val());\n        if ( !isNaN(x) && !isNaN(y) ) {\n            var vertex = new OpenLayers.Geometry.Point(x,y);\n            // Get SRID and transform geometry\n            var srid = $('#edition-point-coord-crs').val();\n            vertex.transform( 'EPSG:'+srid, editionLayer['ol'].projection );\n            var geometryType = editionLayer.geometryType;\n            if ( !editCtrls[geometryType].handler.point ) {\n                var px = editCtrls[geometryType].handler.layer.getViewPortPxFromLonLat({lon:vertex.x,lat:vertex.y});\n                editCtrls[geometryType].handler.createFeature(px);\n                editCtrls[geometryType].handler.point.geometry.x = vertex.x;\n                editCtrls[geometryType].handler.point.geometry.y = vertex.y;\n                editCtrls[geometryType].handler.point.geometry.clearBounds();\n            } else {\n                editCtrls[geometryType].handler.point.geometry.x = vertex.x;\n                editCtrls[geometryType].handler.point.geometry.y = vertex.y;\n                editCtrls[geometryType].handler.point.geometry.clearBounds();\n\n                displaySegmentsLengthAndAngle(editCtrls[geometryType].handler.layer.features[0].geometry);\n            }\n            editCtrls[geometryType].handler.drawFeature();\n        }\n    }\n\n    // Redraw layers\n    function redrawLayers( layerId ) {\n        var willBeRedrawnLayerIds = [layerId];\n\n        //check relations\n        if( 'relations' in config ) {\n            for( var rx in config.relations ){\n                // get children layer ids\n                if( rx == layerId ) {\n                    var layerRelations = config.relations[layerId];\n                    for( var lid in layerRelations ) {\n                        var relation = layerRelations[lid];\n                        if ( $.inArray( relation.referencingLayer, willBeRedrawnLayerIds ) != -1 )\n                            continue;\n                        willBeRedrawnLayerIds.push( relation.referencingLayer );\n                    }\n                }\n                // get pivot linked layer ids\n                else if( rx == 'pivot' && layerId in config.relations.pivot) {\n                    var pivotLayers = config.relations.pivot[layerId];\n                    for( var pId in pivotLayers ) {\n                        if ( $.inArray( pId, willBeRedrawnLayerIds ) != -1 )\n                            continue;\n                        willBeRedrawnLayerIds.push( pId );\n                    }\n                }\n                // get parent layer id\n                else {\n                    if ( $.inArray( rx, willBeRedrawnLayerIds ) != -1 )\n                        continue;\n                    var layerRelations = config.relations[rx];\n                    for( var lid in layerRelations ) {\n                        var relation = layerRelations[lid];\n                        if( relation.referencingLayer == layerId )\n                            willBeRedrawnLayerIds.push( rx );\n                    }\n                }\n            }\n        }\n\n        // Effectively redraw layers\n        var redrawnLayerIds = [];\n        while( willBeRedrawnLayerIds.length > 0 ) {\n            var lid = willBeRedrawnLayerIds.shift();\n            var childLayerConfig = lizMap.getLayerConfigById(\n                lid,\n                config.layers,\n                'id'\n            );\n\n            // if no config\n            if( !childLayerConfig )\n                continue;\n\n            var qgisName = childLayerConfig[0];\n            var childLayerConfig = childLayerConfig[1];\n\n            if( !('geometryType' in childLayerConfig) || childLayerConfig.geometryType == 'none' )\n                continue;\n\n            var olLayer = map.getLayersByName( qgisName );\n            if( olLayer.length == 0 )\n                olLayer = map.getLayersByName( lizMap.cleanName( qgisName ) );\n            if( olLayer.length == 0 )\n                continue;\n\n            olLayer = olLayer[0];\n            if( !olLayer.getVisibility() )\n                continue;\n\n            redrawnLayerIds.push(childLayerConfig.id);\n            olLayer.redraw(true);\n        }\n        return redrawnLayerIds;\n    }\n\n    function getRelationInfo(parentLayerId,childLayerId){\n        if( 'relations' in config && parentLayerId in config.relations) {\n            var layerRelations = config.relations[parentLayerId];\n            for( var lridx in layerRelations ) {\n                var relation = layerRelations[lridx];\n                if (relation.referencingLayer == childLayerId) {\n                    return relation;\n                }\n            }\n        }\n        return null;\n    }\n\n    function finishEdition() {\n        // Lift the constraint on edition\n        lizMap.editionPending = false;\n        $('#mapmenu .edition').removeClass('edition-pending');\n\n        // Deactivate edition map controls\n        if( editCtrls ){\n            editionLayer.deactivateControl();\n            $('#edition-geomtool-container button i').removeClass('line');\n            $('#edition-geomtool-container').hide();\n            editCtrls.modify.mode = OpenLayers.Control.ModifyFeature.RESHAPE;\n            editCtrls.modify.createVertices = true;\n            editCtrls.panel.deactivate();\n        }\n\n        // Remove messages\n        $('#lizmap-edition-message').remove();\n\n        // Empty and hide tables\n        $('#edition-children-container').hide().html('');\n\n        // Empty and hide form and tools\n        $('#edition-form-container').hide().html('');\n        $('#edition-waiter').hide();\n\n        // Display create tools back if there are eligible layers\n        if( hasCreateLayers() ){\n            $('#edition-creation').show();\n        }else{\n            $('#edition-modification-msg').show();\n            $('#dock-close').click();\n        }\n\n        // Hide edition tabs\n        $('.edition-tabs').hide();\n\n        // Display digitization tab back\n        $('.edition-tabs a[href=\"#tabdigitization\"]').show();\n    }\n\n    // Is there at least one layer with creation capability?\n    function hasCreateLayers(){\n        if ('editionLayers' in config) {\n            for (const name in config.editionLayers) {\n                const editionLayer = config.editionLayers[name];\n                if(editionLayer.capabilities.createFeature === \"True\"){\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    function addEditionControls() {\n        // Edition layers\n        if ('editionLayers' in config) {\n            // fill in the combobox containing editable layers\n            var elconfig = {};\n            var elk = [];\n            for (var alName in config.editionLayers) {\n                var al = config.editionLayers[alName];\n                if (\n                    al.capabilities.createFeature == \"False\"\n                 && al.capabilities.modifyAttribute == \"False\"\n                 && al.capabilities.deleteFeature == \"False\"\n                 && al.capabilities.modifyGeometry == \"False\"\n                 ) {\n                    delete config.editionLayers[alName];\n                    continue;\n                }\n\n                if (\n                    alName in config.layers\n                    && al.capabilities.createFeature == \"True\"\n                ) {\n                    var alConfig = config.layers[alName];\n                    elconfig[al.order] = {\n                       id: alConfig.id,\n                        title: alConfig.title,\n                        order: al.order\n                    };\n                    elk.push(al.order);\n                }\n            }\n            // Sort by order (int)\n            elk.sort(function (a, b) {\n                return a - b;\n            });\n            for ( var i in elk ) {\n                var alConfig = elconfig[elk[i]];\n                $('#edition-layer').append('<option value=\"'+alConfig.id+'\">'+alConfig.title+'</option>');\n            }\n            if( hasCreateLayers() ){\n                $('#edition-modification-msg').hide();\n            }\n            else{\n                $('#edition-creation').hide();\n            }\n\n            editionLayer.createLayers();\n            var editLayer = editionLayer.ol;\n\n            // initialize controls\n            editCtrls = {\n                panel: new OpenLayers.Control({\n                    type: OpenLayers.Control.TYPE_TOOL,\n                    eventListeners: {\n                        activate: function( evt ) {\n                            lizMap.deactivateToolControls( evt );\n                            if ( lizMap.controls.featureInfo !== null )\n                                lizMap.controls.featureInfo.deactivate();\n                        },\n                        deactivate: function( evt ) {\n                            for ( var c in editCtrls ) {\n                                if ( c != 'panel' && editCtrls[c].active )\n                                    editCtrls[c].deactivate();\n                            }\n                            if ( lizMap.controls.featureInfo !== null )\n                                lizMap.controls.featureInfo.activate();\n                        }\n                    }\n                }),\n                point: new OpenLayers.Control.DrawFeature(editLayer,\n                     OpenLayers.Handler.Point,{\n                        eventListeners: {\n                            activate: activateDrawFeature,\n                            deactivate: deactivateDrawFeature\n                        }\n                     }),\n                line: new OpenLayers.Control.DrawFeature(editLayer,\n                    OpenLayers.Handler.Path,{\n                        eventListeners: {\n                            activate: activateDrawFeature,\n                            deactivate: deactivateDrawFeature\n                        }\n                     }),\n                polygon: new OpenLayers.Control.DrawFeature(editLayer,\n                    OpenLayers.Handler.Polygon,{\n                        eventListeners: {\n                            activate: activateDrawFeature,\n                            deactivate: deactivateDrawFeature\n                        }\n                     }),\n                modify: new OpenLayers.Control.ModifyFeature(editLayer),\n                reshape: new OpenLayers.Control.Split({layer:editLayer,eventListeners: {aftersplit:afterReshapeSpliting}}),\n                featsplit: new OpenLayers.Control.Split({\n                    layer:editLayer,\n                    eventListeners: {\n                        beforesplit:beforeFeatureSpliting,\n                        aftersplit:afterFeatureSpliting\n                    }})\n            };\n            for ( var ctrl in editCtrls ) {\n                if ( ctrl != 'panel' )\n                    editCtrls[ctrl].events.on({\n                        activate: function( evt ){\n                            evt.object.layer.setVisibility(true);\n                        },\n                        deactivate: function( evt ){\n                            evt.object.layer.setVisibility(false);\n                        }\n                    });\n                map.addControls([editCtrls[ctrl]]);\n            }\n            controls['edition'] = editCtrls.panel;\n\n\n            // edit layer events\n            editLayer.events.on({\n\n                featureadded: function() {\n                    // Deactivate draw control\n                    if( !editCtrls )\n                        return false;\n                    var geometryType = editionLayer.geometryType;\n                    var drawWasActivated = editCtrls[geometryType].active;\n                    if (drawWasActivated)\n                        editCtrls[geometryType].deactivate();\n\n                    // Get feature\n                    var feat = editLayer.features[0];\n\n                    // Update form geometry field from added geometry\n                    updateGeometryColumnFromFeature( feat );\n\n                    // Activate modify control\n                    if (drawWasActivated || editionLayer['config'].capabilities.modifyGeometry == \"True\"){\n                        // activate edition\n                        editCtrls.panel.activate();\n                        // then modify\n                        editCtrls.modify.activate();\n                        $('#edition-geomtool-nodetool').click();\n                        editCtrls.modify.selectFeature( feat );\n                        if (geometryType === 'line'){\n                            $('#edition-geomtool-container button i').addClass('line');\n                        }\n                        if (geometryType !== 'point'){\n                            $('#edition-geomtool-container').show();\n                        }\n                    }\n\n                    // Display form tab and hide tool to handle coords for point geometry\n                    // TODO : allow use of coords tool when editing point\n                    if (geometryType === 'point') {\n                        $('.edition-tabs a[href=\"#tabform\"]').tab('show');\n                        $('#handle-point-coord').hide();\n                    }\n\n                    // Inform user he can now modify\n                    addEditionMessage(lizDict['edition.select.modify.activate'],'info',true);\n                },\n\n                featuremodified: function(evt) {\n                    if ( evt.feature.geometry == null )\n                        return;\n                    // Update form geometry field from added geometry\n                    updateGeometryColumnFromFeature( evt.feature );\n\n                },\n\n                featureselected: function(evt) {\n                    if ( evt.feature.geometry == null )\n                        return;\n\n                },\n\n                featureunselected: function(evt) {\n                    if ( evt.feature.geometry == null )\n                        return;\n\n                    updateGeometryColumnFromFeature(evt.feature);\n                },\n\n                sketchmodified: function(evt) {\n                    // Force drawing point on geolocation position\n                    if ($('#edition-point-coord-geolocation').is(':checked')){\n                        var [lon, lat] = lizMap.mainLizmap.geolocation.getPositionInCRS(editionLayer['ol'].projection);\n                        evt.vertex.x = lon;\n                        evt.vertex.y = lat;\n                    }else{\n                        var vertex = evt.vertex.clone();\n                        displayCoordinates(vertex);\n                    }\n\n                    displaySegmentsLengthAndAngle(evt.feature.geometry);\n                },\n\n                vertexmodified: function(evt) {\n                }\n            });\n\n            $('#edition-draw').click(function(){\n                // Do nothing if not enabled\n                if ( $(this).hasClass('disabled') )\n                    return false;\n                // Deactivate previous edition\n                if( lizMap.editionPending){\n                    if ( !confirm( lizDict['edition.confirm.cancel'] ) )\n                        return false;\n                    finishEdition();\n                    editionLayer.clear();\n                }\n\n                // Activate edition\n                editCtrls.panel.activate();\n\n                // Launch edition to gather edition layer info\n                launchEdition( $('#edition-layer').val(), null);\n                return false;\n            });\n\n            $('#edition-point-coord-form').submit(function(){\n                return false;\n            });\n            $('#edition-point-coord-crs').change(function(){\n                if (editCtrls[editionLayer.geometryType].handler.point !== null) {\n                    var vertex = editCtrls[editionLayer.geometryType].handler.point.geometry.clone();\n                    displayCoordinates(vertex);\n                }\n            });\n            $('#edition-point-coord-x').keyup(keyUpPointCoord);\n            $('#edition-point-coord-y').keyup(keyUpPointCoord);\n            $('#edition-point-coord-geolocation').change(function(){\n                if ( $(this).is(':checked') ) {\n                    $('#edition-point-coord-x').attr('disabled','disabled');\n                    $('#edition-point-coord-y').attr('disabled','disabled');\n\n                    if (lizMap.mainLizmap.geolocation.isTracking){\n                        var geometryType = editionLayer.geometryType;\n                        var [lon, lat] = lizMap.mainLizmap.geolocation.getPositionInCRS(editionLayer['ol'].projection);\n                        if (lon && lat){\n                            var px = editCtrls[geometryType].handler.layer.getViewPortPxFromLonLat({ lon: lon, lat: lat });\n                            editCtrls[geometryType].handler.modifyFeature(px);\n\n                            // Set X and Y input with geolocation position value as it is more precise than position given by edit controls\n                            displayCoordinates(new OpenLayers.Geometry.Point(lon, lat));\n                        }\n                    }\n                } else {\n                    $('#edition-point-coord-x').removeAttr('disabled');\n                    $('#edition-point-coord-y').removeAttr('disabled');\n                }\n                lizMap.mainLizmap.geolocation.isLinkedToEdition = $(this).is(':checked');\n            });\n            $('#edition-point-coord-add').click(function(){\n                var geometryType = editionLayer.geometryType;\n                if (geometryType != 'point' && editCtrls[geometryType].handler.point) {\n                    var node = editCtrls[geometryType].handler.point.geometry;\n                    editCtrls[geometryType].handler.insertXY(node.x, node.y);\n                }\n            });\n            $('#edition-point-coord-submit').click(function(){\n                var geometryType = editionLayer.geometryType;\n\n                // Assert we have a geometry\n                if (editCtrls[geometryType].handler.getGeometry()){\n                    if (geometryType === 'point') {\n                        // Take average point if mode is enabled\n                        if (lizMap.mainLizmap.geolocationSurvey.averageRecordMode && lizMap.mainLizmap.geolocationSurvey.positionAverageInMapCRS !== undefined){\n                            editCtrls[geometryType].handler.point.geometry.x = lizMap.mainLizmap.geolocationSurvey.positionAverageInMapCRS[0];\n                            editCtrls[geometryType].handler.point.geometry.y = lizMap.mainLizmap.geolocationSurvey.positionAverageInMapCRS[1];\n                            editCtrls[geometryType].handler.drawFeature();\n                        }\n                        editCtrls[geometryType].handler.finalize();\n                    } else {\n                        editCtrls[geometryType].handler.finishGeometry();\n                    }\n                }\n            });\n\n            $('#edition-geomtool-nodetool').click(function(){\n                editCtrls.reshape.deactivate();\n                editCtrls.featsplit.deactivate();\n                editCtrls.modify.mode = OpenLayers.Control.ModifyFeature.RESHAPE;\n                editCtrls.modify.createVertices = true;\n                editCtrls.modify.activate();\n                var feat = editionLayer.getFeature();\n                if (feat.geometry) {\n                    // we unselect then select, to trigger corresponding events\n                    if ( editCtrls.modify.feature )\n                        editCtrls.modify.unselectFeature( feat );\n                    editCtrls.modify.selectFeature( feat );\n                }\n            });\n            $('#edition-geomtool-drag').click(function(){\n                editCtrls.reshape.deactivate();\n                editCtrls.featsplit.deactivate();\n                editCtrls.modify.mode = OpenLayers.Control.ModifyFeature.DRAG;\n                editCtrls.modify.createVertices = false;\n                editCtrls.modify.activate();\n                var feat = editionLayer.getFeature();\n                if (feat) {\n                    // we unselect then select, to trigger corresponding events\n                    if ( editCtrls.modify.feature )\n                        editCtrls.modify.unselectFeature( feat );\n                    editCtrls.modify.selectFeature( feat );\n                }\n            });\n            $('#edition-geomtool-rotate').click(function(){\n                editCtrls.reshape.deactivate();\n                editCtrls.featsplit.deactivate();\n                editCtrls.modify.mode = OpenLayers.Control.ModifyFeature.ROTATE;\n                editCtrls.modify.createVertices = false;\n                editCtrls.modify.activate();\n                var feat = editionLayer.getFeature();\n                if (feat) {\n                    // we unselect then select, to trigger corresponding events\n                    if ( editCtrls.modify.feature )\n                        editCtrls.modify.unselectFeature( feat );\n                    editCtrls.modify.selectFeature( feat );\n                }\n            });\n            $('#edition-geomtool-reshape').click(function(){\n                var feat = editionLayer.getFeature();\n                if (feat && editCtrls.modify.feature) {\n                    editCtrls.modify.unselectFeature(feat);\n                }\n                editCtrls.modify.deactivate();\n                editCtrls.featsplit.deactivate();\n                editCtrls.reshape.activate();\n            });\n\n            $('#edition-geomtool-split').click(function(){\n                var feat = editionLayer.getFeature();\n                if (feat && editCtrls.modify.feature) {\n                    editCtrls.modify.unselectFeature(feat);\n                }\n                editCtrls.modify.deactivate();\n                editCtrls.reshape.deactivate();\n                editCtrls.featsplit.activate();\n            });\n\n            $('#edition-geomtool-container button, lizmap-reverse-geom').tooltip( {\n                placement: 'top'\n            } );\n\n            // Geolocation\n\n            // Toggle geolocation UI part based on tracking state\n            lizMap.mainEventDispatcher.addListener(\n                () => {\n                    const geolocationIsTracking = lizMap.mainLizmap.geolocation.isTracking;\n                    $('#edition-point-coord-geolocation-group').toggle(geolocationIsTracking);\n                    if (geolocationIsTracking){\n                        if ($('#edition-point-coord-geolocation').is(':checked')){\n                            $('#edition-point-coord-x').attr('disabled', 'disabled');\n                            $('#edition-point-coord-y').attr('disabled', 'disabled');\n                        }\n                    }else{\n                        $('#edition-point-coord-x').removeAttr('disabled');\n                        $('#edition-point-coord-y').removeAttr('disabled');\n                    }\n                },\n                'geolocation.isTracking'\n            );\n\n            // Make modifyFeature follow geolocation when active\n            lizMap.mainEventDispatcher.addListener(\n                () => {\n                    if (editionLayer && ('config' in editionLayer) ) {\n                        $('#edition-point-coord-geolocation').removeAttr('disabled');\n                        var geometryType = editionLayer.geometryType;\n                        if ($('#edition-point-coord-geolocation').is(':checked') && editCtrls[geometryType].active ) {\n                            // Move point\n                            var [lon, lat] = lizMap.mainLizmap.geolocation.getPositionInCRS(editionLayer['ol'].projection);\n                            var px = editCtrls[geometryType].handler.layer.getViewPortPxFromLonLat({ lon: lon, lat: lat});\n                            editCtrls[geometryType].handler.modifyFeature(px);\n\n                            displayCoordinates(new OpenLayers.Geometry.Point(lon, lat));\n                        }\n                    }\n                },\n                'geolocation.position'\n            );\n        } else {\n            $('#edition').parent().remove();\n            $('#button-edition').remove();\n            $('#edition-form-container').hide();\n        }\n    }\n\n    // Display coordinates. Vertex is in map projection\n    function displayCoordinates(vertex){\n        // Get SRID and transform geometry\n        var srid = $('#edition-point-coord-crs').val();\n        var displayProj = new OpenLayers.Projection('EPSG:' + srid);\n        vertex.transform(editionLayer['ol'].projection, displayProj);\n\n        if (displayProj.getUnits() === 'degrees') {\n            $('#edition-point-coord-x').val(vertex.x.toFixed(6));\n            $('#edition-point-coord-y').val(vertex.y.toFixed(6));\n        } else {\n            $('#edition-point-coord-x').val(vertex.x.toFixed(3));\n            $('#edition-point-coord-y').val(vertex.y.toFixed(3));\n        }\n    }\n\n    function displaySegmentsLength(components, projection, showTotal){\n        $('#edition-segment-length').parents('.control-group').removeClass('hidden');\n\n        const componentsCount = components.length;\n        const lastSegmentLength = (new OpenLayers.Geometry.LineString([components[componentsCount - 2], components[componentsCount - 1]])).getGeodesicLength(projection);\n\n        if (showTotal){\n            let allSegmentsLength = 0;\n\n            if (componentsCount > 1) {\n                for (let index = 0; index < componentsCount - 1; index++) {\n                    let line = new OpenLayers.Geometry.LineString([components[index], components[index + 1]]);\n                    allSegmentsLength += line.getGeodesicLength(projection);\n                }\n            } else {\n                allSegmentsLength = lastSegmentLength;\n            }\n            $('#edition-segment-length').text(lastSegmentLength.toFixed(3) + ' / ' + allSegmentsLength.toFixed(3));\n        }else{\n            $('#edition-segment-length').text(lastSegmentLength.toFixed(3));\n\n        }\n\n        lizMap.mainLizmap.edition.lastSegmentLength = lastSegmentLength.toFixed(3);\n    }\n\n    /*\n    * Display the angle ABC between three points (in degrees)\n    *\n    * A first point, ex: {x: 0, y: 0}\n    * B center point\n    * C second point\n    */\n    function displayAngleBetweenThreePoints(A, B, C){\n        $('#edition-segment-angle').parents('.control-group').removeClass('hidden');\n\n        const AB = Math.sqrt(Math.pow(B.x - A.x, 2) + Math.pow(B.y - A.y, 2));\n        const BC = Math.sqrt(Math.pow(B.x - C.x, 2) + Math.pow(B.y - C.y, 2));\n        const AC = Math.sqrt(Math.pow(C.x - A.x, 2) + Math.pow(C.y - A.y, 2));\n        let angleInDegrees = (Math.acos((BC * BC + AB * AB - AC * AC) / (2 * BC * AB)) * 180)/Math.PI;\n\n        if (isNaN(angleInDegrees)){\n            angleInDegrees = 0;\n        }\n\n        $('#edition-segment-angle').text(angleInDegrees.toFixed(2));\n    }\n\n    // Display drawing segment length and angle when eligible\n    function displaySegmentsLengthAndAngle(drawingGeom){\n        if (drawingGeom.CLASS_NAME === \"OpenLayers.Geometry.LineString\"\n            && drawingGeom.components\n            && drawingGeom.components.length > 1) {\n            const components = drawingGeom.components;\n            const componentsLength = components.length;\n\n            displaySegmentsLength(\n                components,\n                editionLayer['ol'].projection,\n                true\n            );\n\n            if (componentsLength > 2) {\n                displayAngleBetweenThreePoints(components[componentsLength - 1], components[componentsLength - 2], components[componentsLength - 3]);\n            }\n        } else if (drawingGeom.CLASS_NAME === \"OpenLayers.Geometry.Polygon\"\n            && drawingGeom.components\n            && drawingGeom.components[0].components.length > 2) {\n            const clonedComponents = drawingGeom.clone().components[0].components;\n            clonedComponents.pop();\n            const clonedComponentsLength = clonedComponents.length;\n\n            displaySegmentsLength(\n                clonedComponents,\n                editionLayer['ol'].projection,\n                false\n            );\n\n            if (clonedComponentsLength > 2) {\n                displayAngleBetweenThreePoints(clonedComponents[clonedComponentsLength - 1], clonedComponents[clonedComponentsLength - 2], clonedComponents[clonedComponentsLength - 3])\n            }\n        }\n    }\n\n    function cancelEdition(){\n        // Deactivate previous edition\n        finishEdition();\n\n        // back to parent\n        if ( editionLayer.canEditParentFeature()) {\n            launchEditionOfParent();\n        } else {\n            editionLayer.clear();\n            // trigger edition form closed\n            lizMap.events.triggerEvent(\n                'lizmapeditionformclosed'\n            );\n        }\n    }\n\n    // Start edition of a new feature or an existing one\n    function launchEdition( aLayerId, aFid, aParent, aCallback ) {\n\n        var editedFeature = new FeatureEditionData(aLayerId, null, null);\n\n        // Get parent relation\n        var parentInfo = null;\n        if (aParent != null && ('layerId' in aParent) && ('feature' in aParent)) {\n            var parentLayerId = aParent['layerId'];\n            var parentFeat = aParent['feature'];\n            if ('relations' in config &&\n                parentLayerId in config.relations) {\n                var relation = getRelationInfo(parentLayerId, aLayerId);\n                if (relation != null &&\n                    relation.referencingLayer == aLayerId\n                ) {\n                    // the given parent information corresponds to a real parent\n                    // of the feature we want to edit, we take care about it\n\n                    if (lizMap.editionPending && editionLayer['id'] == parentLayerId) {\n                        var formFeatureId = $('#edition-form-container form input[name=\"liz_featureId\"]').val();\n                        var formLayerId = $('#edition-form-container form input[name=\"liz_layerId\"]').val();\n                        if (formLayerId == parentLayerId && formFeatureId == parentFeat.id.split('.').pop()) {\n                            // the current edited feature is the parent of the\n                            // feature we want to edit, let's retrieve its current data\n                            parentInfo = editionLayer.currentFeature;\n                            parentInfo.relation = relation;\n                            parentInfo.feature = parentFeat;\n                            editedFeature.setParentToEditAfterSave(parentInfo);\n                            // and clear edition context\n                            finishEdition();\n                        }\n                    }\n\n                    if (!parentInfo) {\n                        // let's store parent data into a FeatureEditionData\n                        parentInfo = new FeatureEditionData(parentLayerId, parentFeat, relation);\n                        editedFeature.parent = parentInfo;\n                    }\n                }\n            }\n        }\n\n        return internalLaunchEdition(editedFeature, aFid, aCallback);\n    }\n\n    function launchEditionOfParent() {\n        var parentInfo = editionLayer['parent'];\n        var parentFeat = parentInfo.feature;\n\n        return internalLaunchEdition(parentInfo, parentFeat.id.split('.').pop());\n    }\n\n    /**\n     *\n     * @param {FeatureEditionData} editedFeature\n     * @param aFid\n     * @param {Function} aCallback\n     * @returns {boolean}\n     */\n    function internalLaunchEdition(editedFeature, aFid, aCallback) {\n\n        // Deactivate previous edition when the feature to edit has no\n        // relation to the current edited feature\n        if (lizMap.editionPending) {\n            if ( !confirm( lizDict['edition.confirm.cancel'] ) )\n                return false;\n            finishEdition();\n        }\n\n\n        editionLayer.clear();\n\n        // Check if edition is configured in lizmap\n        if ( !('editionLayers' in config) )\n                return false;\n\n        // Get edition map controls\n        if( !editCtrls )\n            return false;\n\n        lizMap.editionPending = true;\n        $('#mapmenu .edition').addClass('edition-pending');\n\n        // check that layers for edition are there\n        editionLayer.createLayers();\n\n        // Initialize edition data\n        var getLayer = lizMap.getLayerConfigById( editedFeature.layerId, config.editionLayers, 'layerId' );\n        if (!getLayer) {\n            lizMap.editionPending = false;\n            $('#mapmenu .edition').removeClass('edition-pending');\n            return false;\n        }\n\n        editedFeature.config = getLayer[1];\n\n        editionLayer.currentFeature = editedFeature;\n\n        // Check if layer is spatial\n        var geometryType = editedFeature.geometryType;\n        if( geometryType in editCtrls ){\n            editionLayer.setDrawControl(editCtrls[geometryType]);\n        }\n\n        // Get form and display it\n        getEditionForm( aFid, aCallback );\n\n        editionLayer.restoreSplitFeatures();\n\n        // Hide bottom dock\n        $('#bottom-dock').trigger('mouseleave');\n\n        return true;\n    }\n\n    /*\n     * Get edition form from service\n     * @param featureId Feature id to edit : in null-> create feature\n     */\n    function getEditionForm( featureId, aCallback ){\n\n        $('#edition-waiter').show();\n        $('#edition-form-container').hide();\n\n        // Get edition type\n        editionType = featureId ? 'modifyFeature' : 'createFeature';\n\n        // Deactivate previous form\n        var originalForm = $('#edition-form-container form');\n        if ( originalForm.length != 0 ) {\n            originalForm.unbind('submit');\n        }\n\n        // Get form via web service\n        var service = OpenLayers.Util.urlAppend(lizUrls.edition\n            ,OpenLayers.Util.getParameterString(lizUrls.params)\n        );\n        $.get(service.replace('getFeature', editionType),{\n            layerId: editionLayer['id'],\n            featureId: featureId\n        }, function(data){\n\n            // Activate some controls\n            if( !editCtrls )\n                return false;\n            if ( !editionLayer['id'] )\n                return false;\n\n            // Hide drawfeature controls : they will go back when finishing edition or canceling\n            $('#edition-modification-msg').hide();\n            $('#edition-creation').hide();\n\n            // Show edition tabs\n            $('.edition-tabs').show();\n\n            // Display the form: after the previous show to be sure\n            // tabs visibility test (see: ) return correct response\n            // See \"Check li (tabs) visibility\" in displayEditionForm method\n            displayEditionForm( data );\n\n            if( aCallback )\n                aCallback( editionLayer['id'], featureId );\n\n        });\n    }\n\n    /*\n     * Activate combobox widget\n     *\n     */\n    function activateCombobox( selectCombobox ){\n        selectCombobox.combobox({\n            \"minLength\": 1,\n            \"position\": { my : \"left bottom\", position: \"flip\" },\n            \"selected\": function(evt, ui){\n              if ( ui.item ) {\n                var self = $(this);\n                var uiItem = $(ui.item);\n                window.setTimeout(function(){\n                  self.val(uiItem.val()).change();\n                }, 1);\n              }\n            }\n        });\n        selectCombobox.parent().find('span > input')\n            .removeClass('label ui-corner-left ui-state-default ui-widget-content ui-widget');\n    }\n\n    /*\n     * Activate autocomplete widget\n     *\n     */\n    function activateAutocomplete( selectAutocomplete ){\n        var wrapper = $( \"<span>\" )\n            .addClass( \"custom-autocomplete\" )\n            .insertAfter( selectAutocomplete );\n        var selected = selectAutocomplete.children( \":selected\" ),\n            value = selected.val() ? selected.text() : \"\";\n        var input = $( \"<input>\" )\n            .appendTo( wrapper )\n            .val( value )\n            .attr( \"title\", \"\" )\n            .addClass( \"custom-autocomplete-input\" )\n            .autocomplete({\n              source: function( request, response ) {\n                  var matcher = new RegExp( $.ui.autocomplete.escapeRegex(request.term), \"i\" );\n                  response( selectAutocomplete.children( \"option\" ).map(function() {\n                    var text = $( this ).text();\n                    if ( this.value && ( !request.term || matcher.test(text) ) )\n                      return {\n                        label: text,\n                        value: text,\n                        option: this\n                      };\n                  }) );\n                }\n            });\n        input.autocomplete( \"widget\" ).css(\"z-index\",\"1050\");\n        input.attr('name', selectAutocomplete.attr('name'));\n        selectAutocomplete.attr('name', input.attr('name')+'_source');\n        selectAutocomplete.hide();\n    }\n\n    /*\n     * Display the edition form\n     * @param {string} data  html corresponding to the form or the result of a submit\n     */\n    function displayEditionForm (data) {\n        // Firstly does the edition-form-container already has a form ?\n        var oldSerializeArray = $('#edition-form-container form').serializeArray();\n\n        // Add data, erase the current form\n        var formContainer = $('#edition-form-container');\n        formContainer.html(data);\n        // the new form\n        var form = $('#edition-form-container form');\n\n        // Response contains a form\n        if ( form.length != 0 ) {\n            var newSerializeArray = form.serializeArray();\n\n            // Get edition type from form data\n            var formFeatureId = form.find('input[name=\"liz_featureId\"]').val();\n            editionType = formFeatureId ? 'modifyFeature' : 'createFeature';\n\n            // Keep a copy of original geometry data\n            if( editionLayer['spatial'] && editionType == 'modifyFeature' ){\n                var gColumn = form.find('input[name=\"liz_geometryColumn\"]').val();\n                if( gColumn != '' ){\n                    var originalGeom = form.find('input[name=\"'+gColumn+'\"]').val();\n                    // XXX: liz_wkt is not used. remove it?\n                    $('#edition-hidden-form input[name=\"liz_wkt\"]').val( originalGeom );\n                }\n            }\n\n            // Manage child form\n            if ( editionLayer['parent'] != null ){\n                var parentInfo = editionLayer['parent'];\n                var relation = parentInfo['relation'];\n                var relationRefField = relation.referencingField;\n                var parentFeatProp = parentInfo['feature'].properties[relation.referencedField];\n\n                var select = form.find('select[name=\"'+relationRefField+'\"]');\n                if( select.length == 1 ){\n                    // Disable the select, the value will be stored in an hidden input\n                    select.val(parentFeatProp)\n                          .attr('disabled','disabled');\n                    // Create hidden input to store value because the select is disabled\n                    var hiddenInput = $('<input type=\"hidden\"></input>')\n                        .attr('id', select.attr('id')+'_hidden')\n                        .attr('name', relationRefField)\n                        .attr('value', parentFeatProp);\n                    form.find('div.jforms-hiddens').append(hiddenInput);\n                    // Disable required constraint\n                    jFormsJQ.getForm(form.attr('id'))\n                        .getControl(relationRefField)\n                        .required=false;\n                } else {\n                    var input = form.find('input[name=\"'+relationRefField+'\"]');\n                    if( input.length == 1 && input.attr('type') != 'hidden'){\n                        // Disable the select, the value will be stored in an hidden input\n                        input.val(parentFeatProp)\n                              .attr('disabled','disabled');\n                        // Create hidden input to store value because the select is disabled\n                        var hiddenInput = $('<input type=\"hidden\"></input>')\n                            .attr('id', input.attr('id')+'_hidden')\n                            .attr('name', relationRefField)\n                            .attr('value', parentFeatProp);\n                        form.find('div.jforms-hiddens').append(hiddenInput);\n                        // Disable required constraint\n                        jFormsJQ.getForm($('#edition-form-container form').attr('id'))\n                            .getControl(relationRefField)\n                            .required=false;\n                    }\n                    else\n                        input.val(parentFeatProp);\n                }\n            }\n\n            // Create combobox based on RelationValue with fieldEditable\n            var selectComboboxes = form.find('select.combobox:not(:disabled)');\n            for( var i=0, len=selectComboboxes.length; i<len; i++ ) {\n                var selectCombobox = $(selectComboboxes[i]);\n                activateCombobox(selectCombobox);\n            }\n            var selectAutocompletes = form.find('select.autocomplete:not(:disabled)');\n            for( var i=0, len=selectAutocompletes.length; i<len; i++ ) {\n                var selectAutocomplete = $(selectAutocompletes[i]);\n                activateAutocomplete(selectAutocomplete);\n            }\n\n            // If the form has been reopened after a successful save, refresh data\n            var formStatus = form.find('input[name=\"liz_status\"]').val();\n            if( formStatus == '0' ) {\n                if ( oldSerializeArray.length != 0 ){\n                    var layerId = editionLayer['id'];\n\n                    // Trigger event\n                    var ev = 'lizmapeditionfeaturecreated';\n                    if( editionType == 'modifyFeature' )\n                        ev = 'lizmapeditionfeaturemodified';\n\n                    lizMap.events.triggerEvent(\n                        ev,\n                        { 'layerId': layerId}\n                    );\n\n                    // Redraw layers\n                    redrawLayers( layerId );\n                }\n\n                var geometryType = editionLayer.geometryType;\n                let feat = getFeatureFromGeometryColumn();\n                // Creation for new feature or existing one without geometry\n                if( editionType == 'createFeature' || !feat ){\n                    // Activate drawFeature control only if relevant\n                    if( (editionLayer['config'].capabilities.createFeature == \"True\"\n                      || (!feat && editionLayer['config'].capabilities.modifyGeometry == \"True\"))\n                    && geometryType in editCtrls ){\n                        $('#edition-geomtool-container button i').removeClass('line');\n                        $('#edition-geomtool-container').hide();\n                        editCtrls.modify.mode = OpenLayers.Control.ModifyFeature.RESHAPE;\n                        editCtrls.modify.createVertices = true;\n                        editCtrls.modify.deactivate();\n                        editionLayer.clearLayers();\n                        var ctrl = editCtrls[geometryType];\n                        if ( !ctrl.active ) {\n                            ctrl.activate();\n\n                            if(lizMap.checkMobile()){\n                                addEditionMessage(lizDict['edition.draw.activate.mobile'], 'info', true);\n                            }else{\n                                addEditionMessage(lizDict['edition.draw.activate'],'info',true);\n                            }\n                        }\n                        // Need to get geometry from form and add feature to the openlayer layer\n                        if( feat ){\n                            editionLayer['ol'].addFeatures([feat]);\n                            editCtrls.modify.activate();\n                            $('#edition-geomtool-nodetool').click();\n                            editCtrls.modify.selectFeature( feat );\n                            if (geometryType == 'line')\n                                $('#edition-geomtool-container button i').addClass('line');\n                            if (geometryType != 'point')\n                                $('#edition-geomtool-container').show();\n                        }\n                    } else {\n                        $('.edition-tabs a[href=\"#tabdigitization\"]').hide();\n                    }\n                }\n                // Modification\n                else{\n                    // Activate modification control\n                    if ( editionLayer['config'].capabilities.modifyGeometry == \"True\"\n                    && geometryType in editCtrls ){\n                        // Need to get geometry from form and add feature to the openlayer layer\n                        feat = updateFeatureFromGeometryColumn();\n                        if( feat ){\n                            editCtrls.modify.activate();\n                            $('#edition-geomtool-nodetool').click();\n                            editCtrls.modify.selectFeature( feat );\n                            if (geometryType == 'line')\n                                $('#edition-geomtool-container button i').addClass('line');\n                            if (geometryType != 'point')\n                                $('#edition-geomtool-container').show();\n                        }\n                    }else{\n                        $('.edition-tabs a[href=\"#tabdigitization\"]').hide();\n                    }\n\n                    addEditionMessage(lizDict['edition.select.modify.activate'],'info',true);\n                }\n            }\n\n            // Check tabs visibility\n            // We need to force showing the container before testing li visibility\n            formContainer.show();\n            // Check li (tabs) visibility\n            var visibleTabs = form.children('ul.nav-tabs').find('li').filter(\n                function(){\n                    return $(this).css('display') !== 'none';\n                });\n            if (visibleTabs.length == 0 ) {\n                // No tabs visible, hide the tab content\n                $('#'+form.attr('id')+'-tab-content').hide();\n            } else {\n                // Activate form tabs based on QGIS drag&drop form layout mode\n                form.children('ul.nav-tabs').find('li:first a').click().blur();\n            }\n            // Handle group visibilities based on QGIS drag&drop form layout mode\n            handleGroupVisibilities( form );\n            // Display label for futur action without bootstrap control-label class\n            $('#'+form.attr('id')+'_liz_future_action_label').removeClass('control-label');\n\n            // Handle JS events on form (submit, etc.)\n            handleEditionFormSubmit( form );\n\n            // Send signal\n            lizMap.events.triggerEvent(\"lizmapeditionformdisplayed\",\n                {\n                    'layerId': editionLayer['id'],\n                    'featureId': formFeatureId,\n                    'editionConfig': editionLayer['config']\n                }\n            );\n\n        }\n\n        // Else it means no form has been sent back\n        // We consider it was a successful edition with no option to reopen the form\n        if ( form.length == 0 ) {\n            controls['edition'].deactivate();\n            controls['edition'].activate();\n            var layerId = editionLayer['id'];\n\n            // Trigger event\n            var ev = 'lizmapeditionfeaturecreated';\n            if( editionType == 'modifyFeature' )\n                ev = 'lizmapeditionfeaturemodified';\n            lizMap.events.triggerEvent(ev,\n                { 'layerId': layerId}\n            );\n\n            // Redraw layers\n            redrawLayers( layerId );\n            // Deactivate edition\n            finishEdition();\n\n            // Display message via JS\n            if ( data != '' )\n                addEditionMessage( data, 'info', true);\n\n        }\n\n        $('#edition-waiter').hide();\n\n        // Activate edition dock if not yet\n        $('li.edition:not(.active) #button-edition').click();\n\n        // Hide popup\n        if( $('#liz_layer_popup_close').length )\n            $('#liz_layer_popup_close').click();\n        if( $('#mapmenu .nav-list > li.popupcontent > a').length ){\n            if( $('#mapmenu .nav-list > li.popupcontent').hasClass('active') ){\n                $('#button-popupcontent').click();\n                $('div.lizmapPopupContent').remove();\n            }\n        }\n\n        if (form.length == 0) {\n            if (editionLayer.canEditParentFeature()) {\n                // back to parent\n                launchEditionOfParent();\n            } else {\n                editionLayer.clear();\n                lizMap.clearDrawLayer('locatelayer');\n                // trigger edition form closed\n                lizMap.events.triggerEvent(\n                    'lizmapeditionformclosed'\n                );\n            }\n        }\n    }\n\n    function dynamicGroupVisibilities( form ){\n        const tForm = jFormsJQ.getForm(form.attr('id'));\n\n        // Copy only necessary parameters before fetch\n        const currentFormData = new FormData(tForm.element);\n        const sentFormData = new FormData();\n\n        // Append form parameters for validation\n        sentFormData.append('__form', tForm.selector);\n        sentFormData.append('__formid', tForm.formId);\n        sentFormData.append('__JFORMS_TOKEN__', currentFormData.get('__JFORMS_TOKEN__'));\n\n        // Append form parameters used in expression related to group visibilities\n        for (const depName of tForm.groupDependencies) {\n            for (const value of currentFormData.getAll(depName)) {\n                sentFormData.append(depName, value);\n            }\n        }\n\n        fetch(jFormsJQ.groupVisibilitiesUrl,{\n            method: \"POST\",\n            body: sentFormData\n        }).then(function (response) {\n            return response.json();\n        }).then(function (data) {\n            for (groupId in data) {\n                var group = $('#' + groupId);\n                if (group.hasClass('tab-pane')) {\n                    // group is tab content\n                    // so manage tab visibility\n                    var tab = form.children('ul.nav-tabs').find('li a[href=\"#' + groupId + '\"]');\n                    var tabParent = tab.parent();\n                    if (data[groupId]) {\n                        // tab has to be visible\n                        if (!tabParent.is(':visible')) {\n                            tabParent.show();\n                        }\n                        var tabContent = $('#' + form.attr('id') + '-tab-content');\n                        if (tabContent.is(':hidden')) {\n                            // the tab content has to be displayed\n                            // because at least one tab is visible\n                            tabContent.show();\n                            tab.click().blur();\n                        }\n                    } else {\n                        // tab will be hidden\n                        if (!tabParent.hasClass('active')) {\n                            // it is not the active one\n                            // just hide it\n                            tabParent.hide();\n                        } else {\n                            if (tabParent.prev(':visible').length > 0) {\n                                // the previous tab is visible\n                                // it can become the new active\n                                tabParent.prev().children('a').first().click().blur();\n                                tabParent.hide();\n                            } else if (tabParent.next(':visible').length > 0) {\n                                // the next tab is visible\n                                // it can become the new active\n                                tabParent.next().children('a').first().click().blur();\n                                tabParent.hide();\n                            } else {\n                                // no siblings tabs are visible\n                                // hide the tab content\n                                tabParent.hide();\n                                $('#' + form.attr('id') + '-tab-content').hide();\n                            }\n                        }\n                    }\n                } else {\n                    // for other groups just hide or show\n                    if (data[groupId]) {\n                        group.show();\n                    } else {\n                        group.hide();\n                    }\n                }\n            }\n        });\n    }\n\n    function handleGroupVisibilities( form ){\n        // use jFormsJQ\n        var tForm = jFormsJQ.getForm(form.attr('id'));\n\n        // get group dependencies\n        if (!tForm.groupDependencies)\n            return;\n        var dependencies = tForm.groupDependencies;\n\n        // the form has some dependencies : we put a listener\n        // on these dependencies, so when these dependencies\n        // change, we retrieve the new group visibilities\n        for(var i=0, len=dependencies.length; i< len; i++) {\n            var depName = dependencies[i];\n            elt = form.find('#'+form.attr('id')+'_'+depName);\n            if (elt.length != 0) {\n                elt.change(function() {\n                    dynamicGroupVisibilities(form);\n                });\n            }\n        }\n    }\n\n    function handleEditionFormSubmit( form ){\n        // Detect click on submit buttons\n        editionLayer['submitActor'] = 'submit';\n        form.find('input[type=\"submit\"]').click(function(evt){\n            var subprefix = form.attr('id') + '_' + '_submit' + '_';\n            var submitActor = $(this).attr('id').replace(subprefix, '');\n            editionLayer['submitActor'] = submitActor;\n\n            // Confirm the use of the cancel button\n            if ( submitActor == 'cancel' ) {\n                evt.stopPropagation();\n                if ( confirm( lizDict['edition.confirm.cancel'] ) )\n                    displayEditionForm( '' );\n                return false;\n            }\n        });\n\n        // If needed, copy the geometry from the openlayer feature\n        var feat = editionLayer.getFeature();\n        if (feat) {\n            updateGeometryColumnFromFeature( feat );\n        }\n\n\n        form.submit(function(evt) {\n\n            // Cancel edition if this submit button has been used\n            if(editionLayer['submitActor'] == 'cancel'){\n                cancelEdition();\n                return false;\n            }\n\n            //  check form\n            var msg = checkFormBeforeSubmit(form, evt);\n\n            // save has been canceled because of some errors in the form\n            if (msg === false) {\n                return false;\n            }\n\n            // Some client side errors have been detected in form\n            if( msg != 'ok' ){\n                addEditionMessage( msg, 'info', true);\n                return false;\n            }\n\n            // Set submit button value\n            var submit_hidden_id = form.attr('id') + '_' + '_submit';\n            $('#' + submit_hidden_id).val(editionLayer['submitActor']);\n\n            // send values\n            $('#edition-waiter').show();\n\n            var newFeatureUrl = form.attr('data-new-feature-action');\n            var url = form.attr('action');\n            var featureData = new FormData(form.get(0));\n            var formResult = '';\n\n            var sendFormPromise = sendNewFeatureForm(url, featureData);\n            sendFormPromise.then(function(data) {\n                formResult = data;\n            });\n            editionLayer.newfeatures.forEach(function(newFeatForm) {\n                sendFormPromise = sendFormPromise.then(() => sendNewFeatureForm(newFeatureUrl, newFeatForm[1]));\n            });\n            sendFormPromise.then(() => {\n                displayEditionForm( formResult );\n            });\n            return false;\n        });\n    }\n\n\n    /**\n     *\n     * @param {FormData} formData\n     * @return {Promise}\n     */\n    function sendNewFeatureForm(url, formData) {\n        return new Promise(function(resolve, reject) {\n\n            var request = new XMLHttpRequest();\n            request.open(\"POST\", url);\n            request.onload = function(oEvent) {\n                if (request.status == 200) {\n                    resolve(request.responseText);\n                } else {\n                    reject();\n                }\n            };\n            request.send(formData);\n        });\n    }\n\n    /**\n     * Check the content of the form\n     * @param {jQuery} form\n     * @param {DOMEvent|null} evt\n     * @returns {string|boolean}\n     */\n    function checkFormBeforeSubmit(form, evt){\n\n        // Jelix checks\n        if (evt) {\n            if (!jFormsJQ._submitListener(evt)) {\n                return false;\n            }\n        }\n        else {\n            form.trigger('jFormsUpdateFields');\n            if (!jFormsJQ.verifyForm(form.get(0))) {\n                return false;\n            }\n        }\n\n        var msg = 'ok';\n        if (\n            editionLayer['spatial']\n            && 'allow_without_geom' in editionLayer['config'].capabilities\n            && editionLayer['config'].capabilities.allow_without_geom == 'False'){\n\n            var gColumn = form.find('input[name=\"liz_geometryColumn\"]').val();\n            var formGeom = form.find('input[name=\"'+gColumn+'\"]').val();\n            if( formGeom.trim() == '' ){\n                msg = lizDict['edition.message.error.no.geometry'];\n            }\n\n        }\n        return msg;\n    }\n\n    function calculateGeometryColumnFromFeature(feat) {\n        if (feat.geometry == null) {\n            return '';\n        }\n\n        if (!editionLayer['ol']) {\n            return '';\n        }\n\n        // Clone passed geometry\n        var geom = feat.geometry.clone();\n\n        // Get SRID and transform geometry\n        var eform = $('#edition-form-container form');\n        var srid = eform.find('input[name=\"liz_srid\"]').val();\n        if (srid != '' && !('EPSG:'+srid in Proj4js.defs)) {\n            Proj4js.defs['EPSG:'+srid] = eform.find('input[name=\"liz_proj4\"]').val();\n        }\n        geom.transform(editionLayer['ol'].projection, 'EPSG:'+srid);\n        return geom;\n    }\n\n\n    function updateGeometryColumnFromFeature( feat ){\n\n        var geom = calculateGeometryColumnFromFeature(feat);\n        if (geom === '') {\n            return false;\n        }\n\n        var eform = $('#edition-form-container form');\n        var srid = eform.find('input[name=\"liz_srid\"]').val();\n        if (srid != '' && !('EPSG:'+srid in Proj4js.defs)) {\n            Proj4js.defs['EPSG:'+srid] = eform.find('input[name=\"liz_proj4\"]').val();\n        }\n\n        // Get edition datasource geometry column name\n\n        var gColumn = eform.find('input[name=\"liz_geometryColumn\"]').val();\n\n        // Set hidden geometry field\n        eform.find('input[name=\"'+gColumn+'\"]').val(geom).change();\n        // dispatch event\n        var formFeatureId = eform.find('input[name=\"liz_featureId\"]').val();\n        var formLayerId = eform.find('input[name=\"liz_layerId\"]').val();\n        lizMap.events.triggerEvent(\"lizmapeditiongeometryupdated\",\n            {\n                'layerId': formLayerId,\n                'featureId': formFeatureId,\n                'geometry': geom,\n                'srid': srid\n            }\n        );\n        return true;\n    }\n\n    function getFeatureFromGeometryColumn(){\n        // Get editLayer\n        var editLayer = editionLayer['ol'];\n        if ( !editLayer )\n            return null;\n\n        // Get form\n        var eform = $('#edition-form-container form');\n\n        // Get edition datasource geometry column name\n        var gColumn = eform.find('input[name=\"liz_geometryColumn\"]').val();\n\n        var srid = eform.find('input[name=\"liz_srid\"]').val();\n        if ( srid != '' && !('EPSG:'+srid in Proj4js.defs) )\n            Proj4js.defs['EPSG:'+srid] = eform.find('input[name=\"liz_proj4\"]').val();\n\n        if ( gColumn != '' ) {\n            var wkt = eform.find('input[name=\"'+gColumn+'\"]').val();\n            if (wkt != '' ) {\n                var format = new OpenLayers.Format.WKT({\n                    externalProjection: 'EPSG:'+srid,\n                    internalProjection: editionLayer['ol'].projection\n                });\n                return format.read(wkt);\n            }\n        }\n        return null;\n    }\n\n    function updateFeatureFromGeometryColumn(){\n\n        var feat = getFeatureFromGeometryColumn();\n        if ( feat == null ) {\n            feat = new OpenLayers.Feature.Vector( );\n        }\n\n        // Get feature id\n        feat.fid = $('#edition-form-container form').find('input[name=\"liz_featureId\"]').val();\n        editionLayer.replaceFeature(feat);\n        return feat;\n    }\n\n\n    function deleteEditionFeature( aLayerId, aFeatureId, aMessage, aCallback ){\n        // Edition layers\n        if ( !('editionLayers' in config) )\n            return false;\n\n        var eConfig = lizMap.getLayerConfigById(\n            aLayerId,\n            config.editionLayers,\n            'layerId'\n        );\n        if ( !eConfig || eConfig[1].capabilities.deleteFeature == \"False\" )\n            return false;\n        var aName = eConfig[0];\n        var configLayer = config.layers[aName];\n        var typeName = eConfig[0].split(' ').join('_');\n        if ( 'shortname' in configLayer && configLayer.shortname != '' )\n            typeName = configLayer.shortname;\n\n        var deleteConfirm = lizDict['edition.confirm.delete'];\n        if ( aMessage )\n            deleteConfirm += '\\n' + aMessage;\n\n        if ( !confirm( deleteConfirm ) )\n            return false;\n\n        var eService = OpenLayers.Util.urlAppend(lizUrls.edition\n            ,OpenLayers.Util.getParameterString(lizUrls.params)\n        );\n        $.get(eService.replace('getFeature','deleteFeature'),{\n            layerId: aLayerId,\n            featureId: aFeatureId\n        }, function(data){\n            addEditionMessage( data, 'info', true);\n\n            if ( aCallback )\n                aCallback( aLayerId, aFeatureId );\n\n            lizMap.events.triggerEvent(\"lizmapeditionfeaturedeleted\",\n                {\n                    'layerId': aLayerId,\n                    'featureId': aFeatureId,\n                    'featureType': aName,\n                    'updateDrawing': true\n                }\n            );\n\n            // Redraw layers\n            redrawLayers( aLayerId );\n        });\n        return false;\n    }\n\n\n    lizMap.events.on({\n        'uicreated':function(evt){\n\n            config = lizMap.config;\n            layers = lizMap.layers;\n            map = lizMap.map;\n            controls = lizMap.controls;\n\n            var editionOptions = {\n                addStyleRulesToSplitLayers : function(rules) {\n                    editionLayer.splitOlStyleCustomRules = editionLayer.splitOlStyleCustomRules.concat(rules);\n                },\n                addStyleRulesToEditLayers : function(rules) {\n                    editionLayer.olStyleCustomRules = editionLayer.olStyleCustomRules.concat(rules);\n                },\n            };\n            lizMap.events.triggerEvent(\n                'lizmapeditionfeatureinit',\n                {\n                    \"editorOptions\" : editionOptions\n                }\n            );\n\n            addEditionControls();\n\n            lizMap.launchEdition = function( aLayerId, aFid, aParent, aCallback) {\n                return launchEdition( aLayerId, aFid, aParent, aCallback);\n            };\n\n            lizMap.deleteEditionFeature = function( aLayerId, aFid, aMessage, aCallback ){\n                return deleteEditionFeature( aLayerId, aFid, aMessage, aCallback );\n            };\n\n            lizMap.events.on({\n                lizmappopupdisplayed: function(e) {\n                    var hasButton = false;\n                    var popup = e.popup;\n                    var selector = 'div.lizmapPopupContent input.lizmap-popup-layer-feature-id';\n                    if ( e.containerId ){\n                        selector = '#'+ e.containerId +' '+ selector;\n                    }\n\n                    if ($(selector).val()){\n\n                        // Get editable features for each editable layer\n                        // -----\n                        // 1/ Get the distinct layers id and config\n                        var edition_layers = {};\n                        var edition_layers_ids = [];\n                        var fetchers = [];\n                        $(selector).each(function () {\n                            // Get layer id and feature id\n                            var self = $(this);\n                            var val = self.val();\n                            var fid = val.split('.').pop();\n                            var layerId = val.replace('.' + fid, '');\n                            var layerConfig = lizMap.getLayerConfigById(layerId);\n\n                            // No editing for this layer\n                            if ('editionLayers' in config && !(layerId in edition_layers)) {\n                                // Get edition config\n                                var eConfig = null;\n                                if ('editionLayers' in config) {\n                                    eConfig = lizMap.getLayerConfigById(\n                                        layerId,\n                                        config.editionLayers,\n                                        'layerId'\n                                    );\n\n                                    // Add the layer\n                                    edition_layers_ids.push(layerId);\n                                    edition_layers[layerId] = {'edition_config': eConfig};\n                                }\n                            }\n                        });\n\n                        // 2/ Add promises to get the editable features for each editable layer\n                        for (const i in edition_layers_ids) {\n                            var id = edition_layers_ids[i];\n                            var fetch_params = {\n                                repository: lizUrls.params.repository,\n                                project: lizUrls.params.project,\n                                layerId: id\n                            };\n                            var fetch_url = OpenLayers.Util.urlAppend(\n                                lizUrls.edition.replace('getFeature', 'editableFeatures'),\n                                OpenLayers.Util.getParameterString(fetch_params)\n                            );\n                            const fetcher = fetch(fetch_url).then(function (response) {\n                                return response.json()\n                            });\n                            fetchers.push(fetcher);\n                        }\n\n                        // 3/ Request editable features in parallel\n                        Promise.all(fetchers).then(responses => {\n                            for (const i in edition_layers_ids) {\n                                var data = responses[i];\n                                var layerId = edition_layers_ids[i];\n                                let hasRestriction = false;\n                                let editableFeaturesId = [];\n\n                                if ('success' in data &&\n                                    data['success'] &&\n                                    'status' in data &&\n                                    data['status'] == 'restricted') {\n\n                                    hasRestriction = true;\n                                    for (const feature of data.features) {\n                                        editableFeaturesId.push(feature.id.split('.')[1]);\n                                    }\n\n                                }\n                                edition_layers[layerId]['editable_feature_ids'] = editableFeaturesId;\n                                edition_layers[layerId]['has_restriction'] = hasRestriction;\n                            }\n\n                            // Add the needed action buttons\n                            $(selector).each(function () {\n\n                                var self = $(this);\n                                var val = self.val();\n                                var fid = val.split('.').pop();\n                                var layerId = val.replace('.' + fid, '');\n                                var layerConfig = lizMap.getLayerConfigById(layerId);\n                                var e_layer = null;\n                                var eConfig = null;\n                                if (layerId in edition_layers) {\n                                    e_layer = edition_layers[layerId];\n                                    eConfig = e_layer['edition_config'];\n                                }\n                                if (e_layer && (!e_layer['has_restriction'] || e_layer['editable_feature_ids'].includes(fid))){\n                                    var eHtml = '';\n\n                                    // Feature editing button\n                                    if (eConfig &&\n                                        (eConfig[1].capabilities.modifyAttribute == \"True\" || eConfig[1].capabilities.modifyGeometry == \"True\")\n                                        && self.next('span.popupButtonBar').find('button.popup-layer-feature-edit').length == 0\n                                    ) {\n                                        eHtml += '<button class=\"btn btn-mini popup-layer-feature-edit\"';\n                                        eHtml += ' value=\"' + val + '\"';\n                                        eHtml += ' title=\"' + lizDict['attributeLayers.btn.edit.title'] + '\"><i class=\"icon-pencil\"></i>&nbsp;</button>';\n                                    }\n\n                                    // Delete feature button\n                                    if (eConfig && eConfig[1].capabilities.deleteFeature == \"True\"\n                                        && self.next('span.popupButtonBar').find('button.popup-layer-feature-delete').length == 0\n                                    ) {\n                                        eHtml += '<button class=\"btn btn-mini popup-layer-feature-delete\"';\n                                        eHtml += ' value=\"' + val + '\"';\n                                        eHtml += ' title=\"' + lizDict['attributeLayers.btn.delete.title'] + '\"><i class=\"icon-trash\"></i>&nbsp;</button>';\n                                    }\n\n                                    if (eHtml != '') {\n                                        var popupButtonBar = self.next('span.popupButtonBar');\n                                        if (popupButtonBar.length != 0) {\n                                            popupButtonBar.append(eHtml);\n                                        } else {\n                                            eHtml = '<span class=\"popupButtonBar\">' + eHtml + '</span><br/>';\n                                            self.after(eHtml);\n                                        }\n                                        self.find('button.btn').tooltip({\n                                            placement: 'bottom'\n                                        });\n                                        hasButton = true;\n                                        if (popup)\n                                            popup.verifySize();\n                                    }\n                                }\n\n                                lizMap.events.triggerEvent(\"lizmappopuplayerfeaturedisplayed\",\n                                    {\n                                        popup: popup,\n                                        fid: fid,\n                                        layerId: layerId,\n                                        eConfig: eConfig,\n                                        layerName: layerConfig[0],\n                                        layerConfig: layerConfig[1],\n                                        div: self.parent()\n                                    }\n                                );\n                            });\n                            // Add interaction buttons\n                            if (hasButton) {\n                                // edit\n                                $('div.lizmapPopupContent button.popup-layer-feature-edit')\n                                    .unbind('click')\n                                    .click(function () {\n                                        var fid = $(this).val().split('.').pop();\n                                        var layerId = $(this).val().replace('.' + fid, '');\n                                        // launch edition\n                                        lizMap.launchEdition(layerId, fid);\n\n                                        // Remove map popup to avoid confusion\n                                        if (lizMap.map.popups.length != 0)\n                                            lizMap.map.removePopup(lizMap.map.popups[0]);\n\n                                        return false;\n                                    })\n                                    .hover(\n                                        function () { $(this).addClass('btn-primary'); },\n                                        function () { $(this).removeClass('btn-primary'); }\n                                    )\n                                    .tooltip();\n\n                                // delete\n                                $('div.lizmapPopupContent button.popup-layer-feature-delete')\n                                    .unbind('click')\n                                    .click(function () {\n                                        var fid = $(this).val().split('.').pop();\n                                        var layerId = $(this).val().replace('.' + fid, '');\n\n                                        // remove Feature\n                                        deleteEditionFeature(layerId, fid);\n\n                                        // Remove map popup to avoid confusion\n                                        if (lizMap.map.popups.length != 0)\n                                            lizMap.map.removePopup(lizMap.map.popups[0]);\n\n                                        return false;\n                                    })\n                                    .hover(\n                                        function () { $(this).addClass('btn-primary'); },\n                                        function () { $(this).removeClass('btn-primary'); }\n                                    )\n                                    .tooltip();\n\n\n                                // Trigger event\n                                lizMap.events.triggerEvent(\"lizmappopupupdated\",\n                                    { 'popup': popup }\n                                );\n\n                            }\n                        });\n                    }\n                }\n            });\n\n        } // uicreated\n    });\n\n\n}();\n\n\nfunction lizEditionErrorDecorator(){\n    this.message = '';\n}\n\nlizEditionErrorDecorator.prototype = {\n    start : function(form){\n        this.message = '';\n        this.form = form;\n        $(\"#\"+form.name+\" .jforms-error\").removeClass('jforms-error');\n        $('#'+form.name+'_errors').empty().hide();\n    },\n    addError : function(control, messageType){\n        var elt = this.form.element.elements[control.name];\n        if (elt && elt.nodeType) {\n            $(elt).addClass('jforms-error');\n        }\n        var name = control.name.replace(/\\[\\]/, '');\n        $(\"#\"+this.form.name+\"_\"+name+\"_label\").addClass('jforms-error');\n\n        if(messageType == 1){\n            this.message  += '<p class=\"error\"> '+control.errRequired + \"</p>\";\n        }else if(messageType == 2){\n            this.message  += '<p class=\"error\"> ' +control.errInvalid + \"</p>\";\n        }else{\n            this.message  += '<p class=\"error\"> Error on \\''+control.label+\"' </p>\";\n        }\n    },\n    end : function(){\n        var errid = this.form.name+'_errors';\n        var div = document.getElementById(errid);\n        if(this.message != ''){\n            if (!div) {\n                div = document.createElement('div');\n                div.setAttribute('class', 'jforms-error-list alert alert-block alert-error');\n                div.setAttribute('id', errid);\n                $(this.form.element).first().before(div);\n            }\n            var jdiv = $(div);\n            jdiv.hide().html(this.message).fadeIn();\n        }\n        else if (div) {\n            $(div).hide();\n        }\n    }\n};\n\nwindow.lizEditionErrorDecorator = lizEditionErrorDecorator;\n"],"names":["lizEditionErrorDecorator","this","message","FeatureEditionData","layerID","feature","relation","layerId","config","parent","backToParent","newfeatures","EditionLayerData","spatial","drawControl","submitActor","ol","currentFeature","splitOl","olStyleCustomRules","splitOlStyleCustomRules","prototype","setParentToEditAfterSave","geometryType","id","projCode","projection","deactivateControl","active","deactivate","clearLayers","destroyFeatures","clear","createLayers","style","styleMap","map","getLayersByName","length","OpenLayers","Style","addRules","Rule","symbolizer","pointRadius","strokeWidth","fillColor","strokeColor","StyleMap","Layer","Vector","addLayer","getFeature","features","removeEditedFeature","feat","removeFeatures","moveEditedFeatureToSplitLayer","formData","addFeatures","push","setDrawControl","replaceFeature","newFeature","canEditParentFeature","restoreSplitFeatures","layer","featList","newFeat","controls","editCtrls","editionLayer","editionType","editionMessageTimeoutId","cleanEditionMessage","$EditionMessage","$","remove","addEditionMessage","aMessage","aType","aClose","window","clearTimeout","lizMap","addMessage","attr","setTimeout","afterReshapeSpliting","evt","splitFeatures","removableFeat","geometry","getLength","getArea","updateGeometryColumnFromFeature","click","beforeFeatureSpliting","form","checkFormBeforeSubmit","lizDict","afterFeatureSpliting","gColumn","find","val","geom","data","FormData","get","set","calculateGeometryColumnFromFeature","featureIdField","geomField","tokenField","oldFeatureId","oldGeom","oldToken","deactivateDrawFeature","html","hide","is","parents","addClass","events","triggerEvent","activateDrawFeature","eform","srid","Proj4js","defs","show","mapSrid","replace","keyUpPointCoord","x","parseFloat","y","isNaN","vertex","Geometry","Point","transform","handler","point","clearBounds","displaySegmentsLengthAndAngle","px","getViewPortPxFromLonLat","lon","lat","createFeature","drawFeature","redrawLayers","willBeRedrawnLayerIds","rx","relations","layerRelations","lid","inArray","referencingLayer","pivot","pivotLayers","pId","redrawnLayerIds","shift","childLayerConfig","getLayerConfigById","layers","qgisName","olLayer","cleanName","getVisibility","redraw","finishEdition","editionPending","removeClass","modify","mode","Control","ModifyFeature","RESHAPE","createVertices","panel","hasCreateLayers","name","editionLayers","capabilities","displayCoordinates","displayProj","Projection","getUnits","toFixed","displaySegmentsLength","components","showTotal","componentsCount","lastSegmentLength","LineString","getGeodesicLength","allSegmentsLength","index","text","mainLizmap","edition","displayAngleBetweenThreePoints","A","B","C","AB","Math","sqrt","pow","BC","AC","angleInDegrees","acos","PI","drawingGeom","CLASS_NAME","componentsLength","clonedComponents","clone","pop","clonedComponentsLength","launchEdition","aLayerId","aFid","aParent","aCallback","editedFeature","parentInfo","parentLayerId","parentFeat","childLayerId","lridx","getRelationInfo","formFeatureId","split","internalLaunchEdition","launchEditionOfParent","confirm","getLayer","featureId","originalForm","unbind","service","Util","urlAppend","lizUrls","getParameterString","params","displayEditionForm","getEditionForm","trigger","activateAutocomplete","selectAutocomplete","wrapper","insertAfter","selected","children","value","input","appendTo","autocomplete","source","request","response","matcher","RegExp","ui","escapeRegex","term","test","label","option","css","oldSerializeArray","serializeArray","formContainer","selectCombobox","originalGeom","relationRefField","referencingField","parentFeatProp","properties","referencedField","select","hiddenInput","append","jFormsJQ","getForm","getControl","required","selectComboboxes","i","len","combobox","my","position","item","self","uiItem","change","selectAutocompletes","ev","getFeatureFromGeometryColumn","modifyGeometry","Feature","fid","updateFeatureFromGeometryColumn","activate","selectFeature","ctrl","checkMobile","filter","blur","tForm","groupDependencies","dependencies","depName","elt","dynamicGroupVisibilities","handleGroupVisibilities","subprefix","stopPropagation","submit","msg","submit_hidden_id","newFeatureUrl","url","featureData","formResult","sendFormPromise","sendNewFeatureForm","then","forEach","newFeatForm","handleEditionFormSubmit","hasClass","clearDrawLayer","currentFormData","element","sentFormData","selector","formId","getAll","fetch","groupVisibilitiesUrl","method","body","json","groupId","group","tab","tabParent","tabContent","prev","first","next","Promise","resolve","reject","XMLHttpRequest","open","onload","oEvent","status","responseText","send","_submitListener","verifyForm","allow_without_geom","trim","formLayerId","wkt","Format","WKT","externalProjection","internalProjection","read","deleteEditionFeature","aFeatureId","eConfig","deleteFeature","aName","configLayer","join","shortname","deleteConfirm","eService","pointOnSegment","segment","min","x1","x2","max","y1","y2","on","editionOptions","addStyleRulesToSplitLayers","rules","concat","addStyleRulesToEditLayers","elconfig","elk","alName","al","modifyAttribute","alConfig","order","title","sort","a","b","editLayer","type","TYPE_TOOL","eventListeners","deactivateToolControls","featureInfo","c","DrawFeature","Handler","line","Path","polygon","Polygon","reshape","Split","aftersplit","featsplit","beforesplit","object","setVisibility","addControls","featureadded","drawWasActivated","featuremodified","featureselected","featureunselected","sketchmodified","geolocation","getPositionInCRS","vertexmodified","keyup","isTracking","modifyFeature","removeAttr","isLinkedToEdition","node","insertXY","getGeometry","geolocationSurvey","averageRecordMode","undefined","positionAverageInMapCRS","finalize","finishGeometry","unselectFeature","DRAG","ROTATE","tooltip","placement","mainEventDispatcher","addListener","geolocationIsTracking","toggle","addEditionControls","lizmappopupdisplayed","e","hasButton","popup","containerId","edition_layers","edition_layers_ids","fetchers","each","fetch_params","repository","project","fetch_url","fetcher","all","responses","hasRestriction","editableFeaturesId","layerConfig","e_layer","includes","eHtml","popupButtonBar","after","verifySize","layerName","div","popups","removePopup","hover","start","empty","addError","control","messageType","elements","nodeType","errRequired","errInvalid","end","errid","document","getElementById","createElement","setAttribute","before","fadeIn"],"sourceRoot":""}